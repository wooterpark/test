/** @file     Rte_SWC_PCF.h
  *
  * @brief    Application header file
  *
  * @note     AUTOMATICALLY GENERATED FILE! DO NOT EDIT!
  *
  * @note     Generated by ETAS RTA-RTE
  * @note     Version 6.6.0 
  */

#ifndef RTE_SWC_PCF_H
#define RTE_SWC_PCF_H

#ifndef RTE_CORE
#ifdef RTE_APPLICATION_HEADER_FILE
#error Multiple application header files included.
#endif /* RTE_APPLICATION_HEADER_FILE */
#define RTE_APPLICATION_HEADER_FILE
#endif /* RTE_CORE */

/*******************************************************
 ***
 *** Includes
 ***
 *******************************************************/

#include "Rte.h"
#include "Rte_Intl.h"
#include "Rte_SWC_PCF_Type.h"

#include "Rte_DataHandleType.h"

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

#if defined(RTE_RUNNABLEAPI_RE_SWC_PCF_10ms)
   /* Do nothing for this and all elif clauses below (rte_sws_2751) */
#elif defined(RTE_RUNNABLEAPI_RE_SWC_PCF_Init)
#else
   /* None of above defined so define value including all APIs (rte_sws_2751) */
   #define RTE_PRV_ALL_API
#endif

/*******************************************************
 ***
 *** Constants
 ***
 *******************************************************/

#ifndef RTE_CORE
#define RTE_E_DiagnosticMonitor_E_NOT_OK ((Std_ReturnType)1)
#define RTE_E_DiagnosticMonitor_E_OK ((Std_ReturnType)0)
#endif /* RTE_CORE */

/*******************************************************
 ***
 *** Public Types
 ***
 *******************************************************/

/* BEGIN: SWC types (core visible) */
struct Rte_CDS_SWC_PCF {
   uint8 Rte_Dummy;
};
typedef struct Rte_CDS_SWC_PCF Rte_CDS_SWC_PCF;
/* END: SWC types (core visible) */

/*******************************************************
 ***
 *** Private Types
 ***
 *******************************************************/

/* BEGIN: SWC types (private) */
/* END: SWC types (private) */

/*******************************************************
 ***
 *** Instance Declarations
 ***
 *******************************************************/

#define RTE_START_SEC_Partition_Core0_CONST_UNSPECIFIED
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern CONST(struct Rte_CDS_SWC_PCF, RTE_CONST) Rte_Inst_SWC_PCF;
#define RTE_STOP_SEC_Partition_Core0_CONST_UNSPECIFIED
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */


#ifndef RTE_CORE
typedef CONSTP2CONST(struct Rte_CDS_SWC_PCF, AUTOMATIC, RTE_CONST) Rte_Instance;
#endif /* RTE_CORE */

/*******************************************************
 ***
 *** API Mapping macros
 ***
 *******************************************************/

/* API Mapping Macros */
#ifndef RTE_CORE

#define Dem_START_SEC_CODE
#include "Dem_MemMap.h" /*lint !e537 permit multiple inclusion */
FUNC(Std_ReturnType, Dem_CODE) Dem_SetEventStatus(VAR(Dem_EventIdType, AUTOMATIC) Rte_PDAV0,
                                                  VAR(Dem_EventStatusType, AUTOMATIC) EventStatus);

#define Dem_STOP_SEC_CODE
#include "Dem_MemMap.h" /*lint !e537 permit multiple inclusion */
#define IoHwAbW_START_SEC_CODE
#include "IoHwAbW_MemMap.h" /*lint !e537 permit multiple inclusion */
FUNC(void, IoHwAbW_CODE) IoHwAb_ADC_GetPhyVoltage(VAR(uint8, AUTOMATIC) Channel,
                                                  CONSTP2VAR(float32, AUTOMATIC, RTE_APPL_DATA) RawVoltage);

FUNC(void, IoHwAbW_CODE) IoHwAb_DIO_Get(VAR(uint16, AUTOMATIC) channel,
                                        CONSTP2VAR(boolean, AUTOMATIC, RTE_APPL_DATA) dio_status);

FUNC(void, IoHwAbW_CODE) IoHwAb_DIO_Set(VAR(uint16, AUTOMATIC) channel,
                                        VAR(boolean, AUTOMATIC) dio_status);

#define IoHwAbW_STOP_SEC_CODE
#include "IoHwAbW_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core0_CONST_UNSPECIFIED
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern CONST(Rte_SelfType_Dem, RTE_CONST) Rte_Self_CPT_Dem;
extern CONST(Rte_SelfType_IoHwAbW, RTE_CONST) Rte_Self_CPT_IoHwAbw;
#define RTE_STOP_SEC_Partition_Core0_CONST_UNSPECIFIED
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_SWC_PCF_START_SEC_CODE
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
FUNC(Std_ReturnType, RTE_CODE) Rte_Write_SWC_PCF_PP_SWC_PCF_PCF_Pos1(VAR(float32, AUTOMATIC) data);
FUNC(Std_ReturnType, RTE_CODE) Rte_Write_SWC_PCF_PP_SWC_PCF_PCF_Status(VAR(uint16, AUTOMATIC) data);
FUNC(Std_ReturnType, RTE_CODE) Rte_Write_SWC_PCF_PP_SWC_PCF_PCF_enMos(VAR(boolean, AUTOMATIC) data);
FUNC(Std_ReturnType, RTE_CODE) Rte_Write_SWC_PCF_PP_SWC_PCF_PCF_iPcf(VAR(float32, AUTOMATIC) data);
#define RTE_SWC_PCF_STOP_SEC_CODE
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core0_VAR_CLEARED_BOOLEAN
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(boolean, RTE_DATA) Rte_Rx_000027_Com_VCU06_Park;
#define RTE_STOP_SEC_Partition_Core0_VAR_CLEARED_BOOLEAN
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core0_VAR_CLEARED_32
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(float32, RTE_DATA) Rte_Rx_000028_Com_VCU06_VehGrad;
#define RTE_STOP_SEC_Partition_Core0_VAR_CLEARED_32
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core0_VAR_CLEARED_8
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(uint8, RTE_DATA) Rte_Rx_000029_Com_VCU06_stBelt;
#define RTE_STOP_SEC_Partition_Core0_VAR_CLEARED_8
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core0_VAR_CLEARED_8
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(uint8, RTE_DATA) Rte_Rx_000030_Com_VCU06_stBreak;
#define RTE_STOP_SEC_Partition_Core0_VAR_CLEARED_8
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core0_VAR_CLEARED_8
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(uint8, RTE_DATA) Rte_Rx_000031_Com_VCU06_stDoor;
#define RTE_STOP_SEC_Partition_Core0_VAR_CLEARED_8
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core0_VAR_CLEARED_32
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(float32, RTE_DATA) Rte_Rx_000037_Epark_iPcf;
#define RTE_STOP_SEC_Partition_Core0_VAR_CLEARED_32
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core0_VAR_CLEARED_32
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(float32, RTE_DATA) Rte_Rx_000038_Epark_posPcf;
#define RTE_STOP_SEC_Partition_Core0_VAR_CLEARED_32
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core0_VAR_CLEARED_32
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(float32, RTE_DATA) Rte_Rx_000039_Epark_posPcfMon;
#define RTE_STOP_SEC_Partition_Core0_VAR_CLEARED_32
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core0_VAR_CLEARED_32
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(float32, RTE_DATA) Rte_Rx_000048_HSPF_nSlowFlt;
#define RTE_STOP_SEC_Partition_Core0_VAR_CLEARED_32
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core0_VAR_CLEARED_BOOLEAN
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(boolean, RTE_DATA) Rte_Rx_000134_NvM_SLFnh;
#define RTE_STOP_SEC_Partition_Core0_VAR_CLEARED_BOOLEAN
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core0_VAR_CLEARED_32
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(float32, RTE_DATA) Rte_Rx_000135_NvM_SLInPLimt;
#define RTE_STOP_SEC_Partition_Core0_VAR_CLEARED_32
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core0_VAR_CLEARED_BOOLEAN
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(boolean, RTE_DATA) Rte_Rx_000138_PCF_MotDir;
#define RTE_STOP_SEC_Partition_Core0_VAR_CLEARED_BOOLEAN
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core0_VAR_CLEARED_BOOLEAN
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(boolean, RTE_DATA) Rte_Rx_000139_PCF_SLEnMotorAcc;
#define RTE_STOP_SEC_Partition_Core0_VAR_CLEARED_BOOLEAN
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core0_VAR_CLEARED_32
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(float32, RTE_DATA) Rte_Rx_000140_PCF_SLInPLimt;
#define RTE_STOP_SEC_Partition_Core0_VAR_CLEARED_32
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core0_VAR_CLEARED_32
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(float32, RTE_DATA) Rte_Rx_000141_PCF_SLtrqDes;
#define RTE_STOP_SEC_Partition_Core0_VAR_CLEARED_32
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core0_VAR_CLEARED_32
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(float32, RTE_DATA) Rte_Rx_000143_PCF_dycPWM;
#define RTE_STOP_SEC_Partition_Core0_VAR_CLEARED_32
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core0_VAR_CLEARED_BOOLEAN
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(boolean, RTE_DATA) Rte_Rx_000144_PCF_flgAllowPwmRun;
#define RTE_STOP_SEC_Partition_Core0_VAR_CLEARED_BOOLEAN
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core0_VAR_CLEARED_BOOLEAN
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(boolean, RTE_DATA) Rte_Rx_000145_PCF_flgSLWD;
#define RTE_STOP_SEC_Partition_Core0_VAR_CLEARED_BOOLEAN
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core0_VAR_CLEARED_BOOLEAN
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(boolean, RTE_DATA) Rte_Rx_000146_PCF_flgShtDwnReq;
#define RTE_STOP_SEC_Partition_Core0_VAR_CLEARED_BOOLEAN
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core0_VAR_CLEARED_8
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(uint8, RTE_DATA) Rte_Rx_000147_PCF_stParkCtl;
#define RTE_STOP_SEC_Partition_Core0_VAR_CLEARED_8
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_PCF_10ms)
/* Inline function call optimization; Rte_Call_RP_SWC_Dem_PCF_ActOvTiErr_SetEventStatus to Dem_SetEventStatus */
#define Rte_Call_RP_SWC_Dem_PCF_ActOvTiErr_SetEventStatus( EventStatus ) Dem_SetEventStatus(((VAR(Dem_EventIdType, AUTOMATIC))83), EventStatus)

#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_PCF_10ms)
/* Inline function call optimization; Rte_Call_RP_SWC_Dem_PCF_IdcOvErr_SetEventStatus to Dem_SetEventStatus */
#define Rte_Call_RP_SWC_Dem_PCF_IdcOvErr_SetEventStatus( EventStatus ) Dem_SetEventStatus(((VAR(Dem_EventIdType, AUTOMATIC))84), EventStatus)

#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_PCF_10ms)
/* Inline function call optimization; Rte_Call_RP_SWC_Dem_PCF_SelfcheckErr_SetEventStatus to Dem_SetEventStatus */
#define Rte_Call_RP_SWC_Dem_PCF_SelfcheckErr_SetEventStatus( EventStatus ) Dem_SetEventStatus(((VAR(Dem_EventIdType, AUTOMATIC))85), EventStatus)

#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_PCF_10ms)
/* Inline function call optimization; Rte_Call_RP_SWC_Dem_PCF_SenClbErr_SetEventStatus to Dem_SetEventStatus */
#define Rte_Call_RP_SWC_Dem_PCF_SenClbErr_SetEventStatus( EventStatus ) Dem_SetEventStatus(((VAR(Dem_EventIdType, AUTOMATIC))86), EventStatus)

#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_PCF_10ms)
/* Inline function call optimization; Rte_Call_RP_SWC_Dem_PCF_SenOvErr_SetEventStatus to Dem_SetEventStatus */
#define Rte_Call_RP_SWC_Dem_PCF_SenOvErr_SetEventStatus( EventStatus ) Dem_SetEventStatus(((VAR(Dem_EventIdType, AUTOMATIC))87), EventStatus)

#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_PCF_10ms)
/* Inline function call optimization; Rte_Call_RP_SWC_Dem_PCF_StallRetryErr_SetEventStatus to Dem_SetEventStatus */
#define Rte_Call_RP_SWC_Dem_PCF_StallRetryErr_SetEventStatus( EventStatus ) Dem_SetEventStatus(((VAR(Dem_EventIdType, AUTOMATIC))88), EventStatus)

#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_PCF_10ms)
/* Inline function call optimization; Rte_Call_RP_SWC_Dem_PCF_StallWarn_SetEventStatus to Dem_SetEventStatus */
#define Rte_Call_RP_SWC_Dem_PCF_StallWarn_SetEventStatus( EventStatus ) Dem_SetEventStatus(((VAR(Dem_EventIdType, AUTOMATIC))89), EventStatus)

#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_PCF_10ms)
/* Inline function call optimization; Rte_Call_RP_SWC_Dem_PCF_UnexpPosErr_SetEventStatus to Dem_SetEventStatus */
#define Rte_Call_RP_SWC_Dem_PCF_UnexpPosErr_SetEventStatus( EventStatus ) Dem_SetEventStatus(((VAR(Dem_EventIdType, AUTOMATIC))90), EventStatus)

#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_PCF_10ms)
/* Inline function call optimization; Rte_Call_RP_SWC_IoHwAb_ADC_BSW_IUBPCF_IoHwAb_ADC_GetPhyVoltage to IoHwAb_ADC_GetPhyVoltage */
#define Rte_Call_RP_SWC_IoHwAb_ADC_BSW_IUBPCF_IoHwAb_ADC_GetPhyVoltage( Channel, RawVoltage ) ( IoHwAb_ADC_GetPhyVoltage(Channel, RawVoltage), ((VAR(Std_ReturnType, AUTOMATIC))RTE_E_OK) )

#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_PCF_10ms)
/* Inline function call optimization; Rte_Call_RP_SWC_IoHwAb_ADC_BSW_UBRPCF_IoHwAb_ADC_GetPhyVoltage to IoHwAb_ADC_GetPhyVoltage */
#define Rte_Call_RP_SWC_IoHwAb_ADC_BSW_UBRPCF_IoHwAb_ADC_GetPhyVoltage( Channel, RawVoltage ) ( IoHwAb_ADC_GetPhyVoltage(Channel, RawVoltage), ((VAR(Std_ReturnType, AUTOMATIC))RTE_E_OK) )

#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_PCF_10ms)
/* Inline function call optimization; Rte_Call_RP_SWC_IoHwAb_ADC_BSW_VDD5PCF_IoHwAb_ADC_GetPhyVoltage to IoHwAb_ADC_GetPhyVoltage */
#define Rte_Call_RP_SWC_IoHwAb_ADC_BSW_VDD5PCF_IoHwAb_ADC_GetPhyVoltage( Channel, RawVoltage ) ( IoHwAb_ADC_GetPhyVoltage(Channel, RawVoltage), ((VAR(Std_ReturnType, AUTOMATIC))RTE_E_OK) )

#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_PCF_10ms)
/* Inline function call optimization; Rte_Call_RP_SWC_IoHwAb_ADC_BSW_tEpc_IoHwAb_ADC_GetPhyVoltage to IoHwAb_ADC_GetPhyVoltage */
#define Rte_Call_RP_SWC_IoHwAb_ADC_BSW_tEpc_IoHwAb_ADC_GetPhyVoltage( Channel, RawVoltage ) ( IoHwAb_ADC_GetPhyVoltage(Channel, RawVoltage), ((VAR(Std_ReturnType, AUTOMATIC))RTE_E_OK) )

#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_PCF_10ms)
/* Inline function call optimization; Rte_Call_RP_SWC_IoHwAb_DIO_Get_BSW_EnPcfEFUSE_IoHwAb_DIO_Get to IoHwAb_DIO_Get */
#define Rte_Call_RP_SWC_IoHwAb_DIO_Get_BSW_EnPcfEFUSE_IoHwAb_DIO_Get( channel, dio_status ) ( IoHwAb_DIO_Get(channel, dio_status), ((VAR(Std_ReturnType, AUTOMATIC))RTE_E_OK) )

#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_PCF_10ms)
/* Inline function call optimization; Rte_Call_RP_SWC_IoHwAb_DIO_Get_BSW_ParkHard_IoHwAb_DIO_Get to IoHwAb_DIO_Get */
#define Rte_Call_RP_SWC_IoHwAb_DIO_Get_BSW_ParkHard_IoHwAb_DIO_Get( channel, dio_status ) ( IoHwAb_DIO_Get(channel, dio_status), ((VAR(Std_ReturnType, AUTOMATIC))RTE_E_OK) )

#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_PCF_10ms)
/* Inline function call optimization; Rte_Call_RP_SWC_IoHwAb_DIO_Get_BSW_bt15_IoHwAb_DIO_Get to IoHwAb_DIO_Get */
#define Rte_Call_RP_SWC_IoHwAb_DIO_Get_BSW_bt15_IoHwAb_DIO_Get( channel, dio_status ) ( IoHwAb_DIO_Get(channel, dio_status), ((VAR(Std_ReturnType, AUTOMATIC))RTE_E_OK) )

#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_PCF_10ms)
/* Inline function call optimization; Rte_Call_RP_SWC_IoHwAb_DIO_Get_BSW_flgPcfOc_IoHwAb_DIO_Get to IoHwAb_DIO_Get */
#define Rte_Call_RP_SWC_IoHwAb_DIO_Get_BSW_flgPcfOc_IoHwAb_DIO_Get( channel, dio_status ) ( IoHwAb_DIO_Get(channel, dio_status), ((VAR(Std_ReturnType, AUTOMATIC))RTE_E_OK) )

#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_PCF_10ms)
/* Inline function call optimization; Rte_Call_RP_SWC_IoHwAb_DIO_Set_PCF_enMos_IoHwAb_DIO_Set to IoHwAb_DIO_Set */
#define Rte_Call_RP_SWC_IoHwAb_DIO_Set_PCF_enMos_IoHwAb_DIO_Set( channel, dio_status ) ( IoHwAb_DIO_Set(channel, dio_status), ((VAR(Std_ReturnType, AUTOMATIC))RTE_E_OK) )

#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_PCF_10ms)
/* Inline read optimization; Rte_Read_RP_SWC_Com_Com_VCU06_Park to direct access */
#define Rte_Read_RP_SWC_Com_Com_VCU06_Park( data )  ( ((*(data)) = Rte_Rx_000027_Com_VCU06_Park),((VAR(Std_ReturnType, AUTOMATIC))RTE_E_OK) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_PCF_10ms)
/* Inline read optimization; Rte_Read_RP_SWC_Com_Com_VCU06_VehGrad to direct access */
#define Rte_Read_RP_SWC_Com_Com_VCU06_VehGrad( data )  ( ((*(data)) = Rte_Rx_000028_Com_VCU06_VehGrad),((VAR(Std_ReturnType, AUTOMATIC))RTE_E_OK) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_PCF_10ms)
/* Inline read optimization; Rte_Read_RP_SWC_Com_Com_VCU06_stBelt to direct access */
#define Rte_Read_RP_SWC_Com_Com_VCU06_stBelt( data )  ( ((*(data)) = Rte_Rx_000029_Com_VCU06_stBelt),((VAR(Std_ReturnType, AUTOMATIC))RTE_E_OK) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_PCF_10ms)
/* Inline read optimization; Rte_Read_RP_SWC_Com_Com_VCU06_stBreak to direct access */
#define Rte_Read_RP_SWC_Com_Com_VCU06_stBreak( data )  ( ((*(data)) = Rte_Rx_000030_Com_VCU06_stBreak),((VAR(Std_ReturnType, AUTOMATIC))RTE_E_OK) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_PCF_10ms)
/* Inline read optimization; Rte_Read_RP_SWC_Com_Com_VCU06_stDoor to direct access */
#define Rte_Read_RP_SWC_Com_Com_VCU06_stDoor( data )  ( ((*(data)) = Rte_Rx_000031_Com_VCU06_stDoor),((VAR(Std_ReturnType, AUTOMATIC))RTE_E_OK) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_PCF_10ms)
/* Inline read optimization; Rte_Read_RP_SWC_Epark_Epark_iPcf to direct access */
#define Rte_Read_RP_SWC_Epark_Epark_iPcf( data )  ( ((*(data)) = Rte_Rx_000037_Epark_iPcf),((VAR(Std_ReturnType, AUTOMATIC))RTE_E_OK) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_PCF_10ms)
/* Inline read optimization; Rte_Read_RP_SWC_Epark_Epark_posPcf to direct access */
#define Rte_Read_RP_SWC_Epark_Epark_posPcf( data )  ( ((*(data)) = Rte_Rx_000038_Epark_posPcf),((VAR(Std_ReturnType, AUTOMATIC))RTE_E_OK) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_PCF_10ms)
/* Inline read optimization; Rte_Read_RP_SWC_Epark_Epark_posPcfMon to direct access */
#define Rte_Read_RP_SWC_Epark_Epark_posPcfMon( data )  ( ((*(data)) = Rte_Rx_000039_Epark_posPcfMon),((VAR(Std_ReturnType, AUTOMATIC))RTE_E_OK) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_PCF_10ms)
/* Inline read optimization; Rte_Read_RP_SWC_HSPF_HSPF_nSlowFlt to direct access */
#define Rte_Read_RP_SWC_HSPF_HSPF_nSlowFlt( data )  ( ((*(data)) = Rte_Rx_000048_HSPF_nSlowFlt),((VAR(Std_ReturnType, AUTOMATIC))RTE_E_OK) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_PCF_10ms)
/* Inline read optimization; Rte_Read_RP_SWC_NvM_NvM_SLFnh to direct access */
#define Rte_Read_RP_SWC_NvM_NvM_SLFnh( data )  ( ((*(data)) = Rte_Rx_000134_NvM_SLFnh),((VAR(Std_ReturnType, AUTOMATIC))RTE_E_OK) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_PCF_10ms)
/* Inline read optimization; Rte_Read_RP_SWC_NvM_NvM_SLInPLimt to direct access */
#define Rte_Read_RP_SWC_NvM_NvM_SLInPLimt( data )  ( ((*(data)) = Rte_Rx_000135_NvM_SLInPLimt),((VAR(Std_ReturnType, AUTOMATIC))RTE_E_OK) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_PCF_10ms)
/* Inline Write optimization; Rte_Write_PP_SWC_PCF_PCF_MotDir to direct write */
#define Rte_Write_PP_SWC_PCF_PCF_MotDir( data ) ( (Rte_Rx_000138_PCF_MotDir = data), RTE_E_OK )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_PCF_10ms)
#define Rte_Write_PP_SWC_PCF_PCF_Pos1( data ) (Rte_Write_SWC_PCF_PP_SWC_PCF_PCF_Pos1(data))
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_PCF_10ms)
/* Inline Write optimization; Rte_Write_PP_SWC_PCF_PCF_SLEnMotorAcc to direct write */
#define Rte_Write_PP_SWC_PCF_PCF_SLEnMotorAcc( data ) ( (Rte_Rx_000139_PCF_SLEnMotorAcc = data), RTE_E_OK )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_PCF_10ms)
/* Inline Write optimization; Rte_Write_PP_SWC_PCF_PCF_SLInPLimt to direct write */
#define Rte_Write_PP_SWC_PCF_PCF_SLInPLimt( data ) ( (Rte_Rx_000140_PCF_SLInPLimt = data), RTE_E_OK )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_PCF_10ms)
/* Inline write optimization; Rte_Write_PP_SWC_PCF_PCF_SLInPLimtPos to null body */
#define Rte_Write_PP_SWC_PCF_PCF_SLInPLimtPos( data )  ( ((VAR(Std_ReturnType, AUTOMATIC))RTE_E_OK) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_PCF_10ms)
/* Inline Write optimization; Rte_Write_PP_SWC_PCF_PCF_SLtrqDes to direct write */
#define Rte_Write_PP_SWC_PCF_PCF_SLtrqDes( data ) ( (Rte_Rx_000141_PCF_SLtrqDes = data), RTE_E_OK )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_PCF_10ms)
#define Rte_Write_PP_SWC_PCF_PCF_Status( data ) (Rte_Write_SWC_PCF_PP_SWC_PCF_PCF_Status(data))
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_PCF_10ms)
/* Inline Write optimization; Rte_Write_PP_SWC_PCF_PCF_dycPWM to direct write */
#define Rte_Write_PP_SWC_PCF_PCF_dycPWM( data ) ( (Rte_Rx_000143_PCF_dycPWM = data), RTE_E_OK )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_PCF_10ms)
#define Rte_Write_PP_SWC_PCF_PCF_enMos( data ) (Rte_Write_SWC_PCF_PP_SWC_PCF_PCF_enMos(data))
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_PCF_10ms)
/* Inline Write optimization; Rte_Write_PP_SWC_PCF_PCF_flgAllowPwmRun to direct write */
#define Rte_Write_PP_SWC_PCF_PCF_flgAllowPwmRun( data ) ( (Rte_Rx_000144_PCF_flgAllowPwmRun = data), RTE_E_OK )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_PCF_10ms)
/* Inline Write optimization; Rte_Write_PP_SWC_PCF_PCF_flgSLWD to direct write */
#define Rte_Write_PP_SWC_PCF_PCF_flgSLWD( data ) ( (Rte_Rx_000145_PCF_flgSLWD = data), RTE_E_OK )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_PCF_10ms)
/* Inline Write optimization; Rte_Write_PP_SWC_PCF_PCF_flgShtDwnReq to direct write */
#define Rte_Write_PP_SWC_PCF_PCF_flgShtDwnReq( data ) ( (Rte_Rx_000146_PCF_flgShtDwnReq = data), RTE_E_OK )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_PCF_10ms)
#define Rte_Write_PP_SWC_PCF_PCF_iPcf( data ) (Rte_Write_SWC_PCF_PP_SWC_PCF_PCF_iPcf(data))
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_PCF_10ms)
/* Inline Write optimization; Rte_Write_PP_SWC_PCF_PCF_stParkCtl to direct write */
#define Rte_Write_PP_SWC_PCF_PCF_stParkCtl( data ) ( (Rte_Rx_000147_PCF_stParkCtl = data), RTE_E_OK )
#endif

#endif /* RTE_CORE */

/*******************************************************
 ***
 *** RE Prototypes
 ***
 *******************************************************/

#define SWC_PCF_START_SEC_CODE
#include "SWC_PCF_MemMap.h" /*lint !e537 permit multiple inclusion */
FUNC(void, SWC_PCF_CODE) SWC_PCF_10ms(void);
FUNC(void, SWC_PCF_CODE) SWC_PCF_Init(void);
#define SWC_PCF_STOP_SEC_CODE
#include "SWC_PCF_MemMap.h" /*lint !e537 permit multiple inclusion */

/* Initial values for data element prototypes */

#ifdef __cplusplus
} /* extern C */
#endif /* __cplusplus */

#endif /* !RTE_SWC_PCF_H */
