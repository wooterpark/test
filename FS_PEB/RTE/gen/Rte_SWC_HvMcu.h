/** @file     Rte_SWC_HvMcu.h
  *
  * @brief    Application header file
  *
  * @note     AUTOMATICALLY GENERATED FILE! DO NOT EDIT!
  *
  * @note     Generated by ETAS RTA-RTE
  * @note     Version 6.6.0 
  */

#ifndef RTE_SWC_HVMCU_H
#define RTE_SWC_HVMCU_H

#ifndef RTE_CORE
#ifdef RTE_APPLICATION_HEADER_FILE
#error Multiple application header files included.
#endif /* RTE_APPLICATION_HEADER_FILE */
#define RTE_APPLICATION_HEADER_FILE
#endif /* RTE_CORE */

/*******************************************************
 ***
 *** Includes
 ***
 *******************************************************/

#include "Rte.h"
#include "Rte_Intl.h"
#include "Rte_SWC_HvMcu_Type.h"

#include "Rte_DataHandleType.h"

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

#if defined(RTE_RUNNABLEAPI_RE_HvMcu_100us)
   /* Do nothing for this and all elif clauses below (rte_sws_2751) */
#elif defined(RTE_RUNNABLEAPI_RE_HvMcu_2ms)
#else
   /* None of above defined so define value including all APIs (rte_sws_2751) */
   #define RTE_PRV_ALL_API
#endif

/*******************************************************
 ***
 *** Constants
 ***
 *******************************************************/


/*******************************************************
 ***
 *** Public Types
 ***
 *******************************************************/

/* BEGIN: SWC types (core visible) */
struct Rte_CDS_SWC_HvMcu {
   uint8 Rte_Dummy;
};
typedef struct Rte_CDS_SWC_HvMcu Rte_CDS_SWC_HvMcu;
/* END: SWC types (core visible) */

/*******************************************************
 ***
 *** Private Types
 ***
 *******************************************************/

/* BEGIN: SWC types (private) */
/* END: SWC types (private) */

/*******************************************************
 ***
 *** Instance Declarations
 ***
 *******************************************************/

#define RTE_START_SEC_Partition_Core0_CONST_UNSPECIFIED
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern CONST(struct Rte_CDS_SWC_HvMcu, RTE_CONST) Rte_Inst_SWC_HvMcu;
#define RTE_STOP_SEC_Partition_Core0_CONST_UNSPECIFIED
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */


#ifndef RTE_CORE
typedef CONSTP2CONST(struct Rte_CDS_SWC_HvMcu, AUTOMATIC, RTE_CONST) Rte_Instance;
#endif /* RTE_CORE */

/*******************************************************
 ***
 *** API Mapping macros
 ***
 *******************************************************/

/* API Mapping Macros */
#ifndef RTE_CORE

#define RTE_SWC_HVMCU_START_SEC_CODE
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
FUNC(Std_ReturnType, RTE_CODE) Rte_Write_SWC_HvMcu_PP_SWC_HvMcu_HvMcu_uDcLnkHvMcu(VAR(float32, AUTOMATIC) data);
#define RTE_SWC_HVMCU_STOP_SEC_CODE
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core0_VAR_CLEARED_32
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(float32, RTE_DATA) Rte_Rx_000069_HvMcu_AlOfsClb_TimeStamp;
#define RTE_STOP_SEC_Partition_Core0_VAR_CLEARED_32
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core0_VAR_CLEARED_16
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(uint16, RTE_DATA) Rte_Rx_000070_HvMcu_HvMcuVer;
#define RTE_STOP_SEC_Partition_Core0_VAR_CLEARED_16
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core0_VAR_CLEARED_16
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(uint16, RTE_DATA) Rte_Rx_000071_HvMcu_VDD15L_Vol;
#define RTE_STOP_SEC_Partition_Core0_VAR_CLEARED_16
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core0_VAR_CLEARED_BOOLEAN
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(boolean, RTE_DATA) Rte_Rx_000072_HvMcu_flgUphaEdgeRiseCo;
#define RTE_STOP_SEC_Partition_Core0_VAR_CLEARED_BOOLEAN
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core0_VAR_CLEARED_16
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(uint16, RTE_DATA) Rte_Rx_000073_HvMcu_tDBCTempU;
#define RTE_STOP_SEC_Partition_Core0_VAR_CLEARED_16
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core0_VAR_CLEARED_16
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(uint16, RTE_DATA) Rte_Rx_000074_HvMcu_tDBCTempV;
#define RTE_STOP_SEC_Partition_Core0_VAR_CLEARED_16
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core0_VAR_CLEARED_16
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(uint16, RTE_DATA) Rte_Rx_000075_HvMcu_tDBCTempW;
#define RTE_STOP_SEC_Partition_Core0_VAR_CLEARED_16
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core0_VAR_CLEARED_16
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(uint16, RTE_DATA) Rte_Rx_000076_HvMcu_tDrvBoardTemp;
#define RTE_STOP_SEC_Partition_Core0_VAR_CLEARED_16
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core0_VAR_CLEARED_8
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(uint8, RTE_DATA) Rte_Rx_000164_RCF_stAgRtrOfsCal;
#define RTE_STOP_SEC_Partition_Core0_VAR_CLEARED_8
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core0_VAR_CLEARED_BOOLEAN
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(boolean, RTE_DATA) Rte_Rx_000172_SCF_flgEmgReqInvDcha;
#define RTE_STOP_SEC_Partition_Core0_VAR_CLEARED_BOOLEAN
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_HvMcu_2ms)
/* Inline read optimization; Rte_Read_RP_SWC_RCF_RCF_stAgRtrOfsCal to direct access */
#define Rte_Read_RP_SWC_RCF_RCF_stAgRtrOfsCal( data )  ( ((*(data)) = Rte_Rx_000164_RCF_stAgRtrOfsCal),((VAR(Std_ReturnType, AUTOMATIC))RTE_E_OK) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_HvMcu_100us)
/* Inline read optimization; Rte_Read_RP_SWC_SCF_SCF_flgEmgReqInvDcha to direct access */
#define Rte_Read_RP_SWC_SCF_SCF_flgEmgReqInvDcha( data )  ( ((*(data)) = Rte_Rx_000172_SCF_flgEmgReqInvDcha),((VAR(Std_ReturnType, AUTOMATIC))RTE_E_OK) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_HvMcu_100us)
/* Inline Write optimization; Rte_Write_PP_SWC_HvMcu_HvMcu_AlOfsClb_TimeStamp to direct write */
#define Rte_Write_PP_SWC_HvMcu_HvMcu_AlOfsClb_TimeStamp( data ) ( (Rte_Rx_000069_HvMcu_AlOfsClb_TimeStamp = data), RTE_E_OK )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_HvMcu_100us)
/* Inline Write optimization; Rte_Write_PP_SWC_HvMcu_HvMcu_HvMcuVer to direct write */
#define Rte_Write_PP_SWC_HvMcu_HvMcu_HvMcuVer( data ) ( (Rte_Rx_000070_HvMcu_HvMcuVer = data), RTE_E_OK )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_HvMcu_100us)
/* Inline Write optimization; Rte_Write_PP_SWC_HvMcu_HvMcu_VDD15L_Vol to direct write */
#define Rte_Write_PP_SWC_HvMcu_HvMcu_VDD15L_Vol( data ) ( (Rte_Rx_000071_HvMcu_VDD15L_Vol = data), RTE_E_OK )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_HvMcu_100us)
/* Inline Write optimization; Rte_Write_PP_SWC_HvMcu_HvMcu_flgUphaEdgeRiseCo to direct write */
#define Rte_Write_PP_SWC_HvMcu_HvMcu_flgUphaEdgeRiseCo( data ) ( (Rte_Rx_000072_HvMcu_flgUphaEdgeRiseCo = data), RTE_E_OK )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_HvMcu_100us)
/* Inline Write optimization; Rte_Write_PP_SWC_HvMcu_HvMcu_tDBCTempU to direct write */
#define Rte_Write_PP_SWC_HvMcu_HvMcu_tDBCTempU( data ) ( (Rte_Rx_000073_HvMcu_tDBCTempU = data), RTE_E_OK )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_HvMcu_100us)
/* Inline Write optimization; Rte_Write_PP_SWC_HvMcu_HvMcu_tDBCTempV to direct write */
#define Rte_Write_PP_SWC_HvMcu_HvMcu_tDBCTempV( data ) ( (Rte_Rx_000074_HvMcu_tDBCTempV = data), RTE_E_OK )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_HvMcu_100us)
/* Inline Write optimization; Rte_Write_PP_SWC_HvMcu_HvMcu_tDBCTempW to direct write */
#define Rte_Write_PP_SWC_HvMcu_HvMcu_tDBCTempW( data ) ( (Rte_Rx_000075_HvMcu_tDBCTempW = data), RTE_E_OK )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_HvMcu_100us)
/* Inline Write optimization; Rte_Write_PP_SWC_HvMcu_HvMcu_tDrvBoardTemp to direct write */
#define Rte_Write_PP_SWC_HvMcu_HvMcu_tDrvBoardTemp( data ) ( (Rte_Rx_000076_HvMcu_tDrvBoardTemp = data), RTE_E_OK )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_HvMcu_100us)
/* Inline write optimization; Rte_Write_PP_SWC_HvMcu_HvMcu_uBackEMF_U to null body */
#define Rte_Write_PP_SWC_HvMcu_HvMcu_uBackEMF_U( data )  ( ((VAR(Std_ReturnType, AUTOMATIC))RTE_E_OK) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_HvMcu_100us)
/* Inline write optimization; Rte_Write_PP_SWC_HvMcu_HvMcu_uBackEMF_V to null body */
#define Rte_Write_PP_SWC_HvMcu_HvMcu_uBackEMF_V( data )  ( ((VAR(Std_ReturnType, AUTOMATIC))RTE_E_OK) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_HvMcu_100us)
/* Inline write optimization; Rte_Write_PP_SWC_HvMcu_HvMcu_uBackEMF_W to null body */
#define Rte_Write_PP_SWC_HvMcu_HvMcu_uBackEMF_W( data )  ( ((VAR(Std_ReturnType, AUTOMATIC))RTE_E_OK) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_HvMcu_100us)
#define Rte_Write_PP_SWC_HvMcu_HvMcu_uDcLnkHvMcu( data ) (Rte_Write_SWC_HvMcu_PP_SWC_HvMcu_HvMcu_uDcLnkHvMcu(data))
#endif

#endif /* RTE_CORE */

/*******************************************************
 ***
 *** RE Prototypes
 ***
 *******************************************************/

#define SWC_HvMcu_START_SEC_CODE
#include "SWC_HvMcu_MemMap.h" /*lint !e537 permit multiple inclusion */
FUNC(void, SWC_HvMcu_CODE) SWC_HvMcu_Task_100us(void);
FUNC(void, SWC_HvMcu_CODE) SWC_HvMcu_Task_2ms(void);
#define SWC_HvMcu_STOP_SEC_CODE
#include "SWC_HvMcu_MemMap.h" /*lint !e537 permit multiple inclusion */

/* Initial values for data element prototypes */

#ifdef __cplusplus
} /* extern C */
#endif /* __cplusplus */

#endif /* !RTE_SWC_HVMCU_H */
