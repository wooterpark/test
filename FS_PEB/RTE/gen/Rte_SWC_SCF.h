/** @file     Rte_SWC_SCF.h
  *
  * @brief    Application header file
  *
  * @note     AUTOMATICALLY GENERATED FILE! DO NOT EDIT!
  *
  * @note     Generated by ETAS RTA-RTE
  * @note     Version 6.6.0 
  */

#ifndef RTE_SWC_SCF_H
#define RTE_SWC_SCF_H

#ifndef RTE_CORE
#ifdef RTE_APPLICATION_HEADER_FILE
#error Multiple application header files included.
#endif /* RTE_APPLICATION_HEADER_FILE */
#define RTE_APPLICATION_HEADER_FILE
#endif /* RTE_CORE */

/*******************************************************
 ***
 *** Includes
 ***
 *******************************************************/

#include "Rte.h"
#include "Rte_Intl.h"
#include "Rte_SWC_SCF_Type.h"

#include "Rte_DataHandleType.h"

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

#if defined(RTE_RUNNABLEAPI_RE_SWC_SCF_10ms)
   /* Do nothing for this and all elif clauses below (rte_sws_2751) */
#elif defined(RTE_RUNNABLEAPI_RE_SWC_SCF_Init)
#else
   /* None of above defined so define value including all APIs (rte_sws_2751) */
   #define RTE_PRV_ALL_API
#endif

/*******************************************************
 ***
 *** Constants
 ***
 *******************************************************/

#ifndef RTE_CORE
#define RTE_E_DiagnosticMonitor_E_NOT_OK ((Std_ReturnType)1)
#define RTE_E_DiagnosticMonitor_E_OK ((Std_ReturnType)0)
#define RTE_E_FunctionInhibition_E_NOT_OK ((Std_ReturnType)1)
#define RTE_E_FunctionInhibition_E_OK ((Std_ReturnType)0)
#endif /* RTE_CORE */

/*******************************************************
 ***
 *** Public Types
 ***
 *******************************************************/

/* BEGIN: SWC types (core visible) */
struct Rte_CDS_SWC_SCF {
   uint8 Rte_Dummy;
};
typedef struct Rte_CDS_SWC_SCF Rte_CDS_SWC_SCF;
/* END: SWC types (core visible) */

/*******************************************************
 ***
 *** Private Types
 ***
 *******************************************************/

/* BEGIN: SWC types (private) */
/* END: SWC types (private) */

/*******************************************************
 ***
 *** Instance Declarations
 ***
 *******************************************************/

#define RTE_START_SEC_Partition_Core0_CONST_UNSPECIFIED
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern CONST(struct Rte_CDS_SWC_SCF, RTE_CONST) Rte_Inst_SWC_SCF;
#define RTE_STOP_SEC_Partition_Core0_CONST_UNSPECIFIED
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */


#ifndef RTE_CORE
typedef CONSTP2CONST(struct Rte_CDS_SWC_SCF, AUTOMATIC, RTE_CONST) Rte_Instance;
#endif /* RTE_CORE */

/*******************************************************
 ***
 *** API Mapping macros
 ***
 *******************************************************/

/* API Mapping Macros */
#ifndef RTE_CORE

#define Dem_START_SEC_CODE
#include "Dem_MemMap.h" /*lint !e537 permit multiple inclusion */
FUNC(Std_ReturnType, Dem_CODE) Dem_SetEventStatus(VAR(Dem_EventIdType, AUTOMATIC) Rte_PDAV0,
                                                  VAR(Dem_EventStatusType, AUTOMATIC) EventStatus);

#define Dem_STOP_SEC_CODE
#include "Dem_MemMap.h" /*lint !e537 permit multiple inclusion */
#define FiM_START_SEC_CODE
#include "FiM_MemMap.h" /*lint !e537 permit multiple inclusion */
FUNC(Std_ReturnType, FiM_CODE) FiM_GetFunctionPermission(VAR(FiM_FunctionIdType, AUTOMATIC) Rte_PDAV0,
                                                         CONSTP2VAR(boolean, AUTOMATIC, RTE_APPL_DATA) Permission);

#define FiM_STOP_SEC_CODE
#include "FiM_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core0_CONST_UNSPECIFIED
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern CONST(Rte_SelfType_Dem, RTE_CONST) Rte_Self_CPT_Dem;
extern CONST(Rte_SelfType_FiM, RTE_CONST) Rte_Self_CPT_FIM;
#define RTE_STOP_SEC_Partition_Core0_CONST_UNSPECIFIED
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_SWC_SCF_START_SEC_CODE
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
FUNC(Std_ReturnType, RTE_CODE) Rte_Write_SWC_SCF_PP_SWC_SCF_SCF_FIM_ReqFailrMod(VAR(boolean, AUTOMATIC) data);
FUNC(Std_ReturnType, RTE_CODE) Rte_Write_SWC_SCF_PP_SWC_SCF_SCF_flgEnDchaToMc(VAR(boolean, AUTOMATIC) data);
FUNC(Std_ReturnType, RTE_CODE) Rte_Write_SWC_SCF_PP_SWC_SCF_SCF_flginitPI(VAR(boolean, AUTOMATIC) data);
FUNC(Std_ReturnType, RTE_CODE) Rte_Write_SWC_SCF_PP_SWC_SCF_SCF_stGateDrv(VAR(uint8, AUTOMATIC) data);
FUNC(Std_ReturnType, RTE_CODE) Rte_Write_SWC_SCF_PP_SWC_SCF_SCF_stPwmMode(VAR(uint8, AUTOMATIC) data);
FUNC(Std_ReturnType, RTE_CODE) Rte_Write_SWC_SCF_PP_SWC_SCF_SCF_stSysCtl(VAR(uint8, AUTOMATIC) data);
#define RTE_SWC_SCF_STOP_SEC_CODE
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core0_VAR_CLEARED_BOOLEAN
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(boolean, RTE_DATA) Rte_Rx_000041_HSPF_Wake;
#define RTE_STOP_SEC_Partition_Core0_VAR_CLEARED_BOOLEAN
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core0_VAR_CLEARED_BOOLEAN
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(boolean, RTE_DATA) Rte_Rx_000042_HSPF_bt15;
#define RTE_STOP_SEC_Partition_Core0_VAR_CLEARED_BOOLEAN
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core0_VAR_CLEARED_BOOLEAN
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(boolean, RTE_DATA) Rte_Rx_000043_HSPF_flgCrash;
#define RTE_STOP_SEC_Partition_Core0_VAR_CLEARED_BOOLEAN
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core0_VAR_CLEARED_32
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(float32, RTE_DATA) Rte_Rx_000048_HSPF_nSlowFlt;
#define RTE_STOP_SEC_Partition_Core0_VAR_CLEARED_32
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core0_VAR_CLEARED_8
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(uint8, RTE_DATA) Rte_Rx_000050_HSPF_stIphaOffCal;
#define RTE_STOP_SEC_Partition_Core0_VAR_CLEARED_8
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core0_VAR_CLEARED_32
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(float32, RTE_DATA) Rte_Rx_000066_HSPF_uDcLnkSlowFlt;
#define RTE_STOP_SEC_Partition_Core0_VAR_CLEARED_32
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core0_VAR_CLEARED_BOOLEAN
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(boolean, RTE_DATA) Rte_Rx_000079_Igbt_flgGateDrvRdyHs;
#define RTE_STOP_SEC_Partition_Core0_VAR_CLEARED_BOOLEAN
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core0_VAR_CLEARED_BOOLEAN
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(boolean, RTE_DATA) Rte_Rx_000080_Igbt_flgGateDrvRdyLs;
#define RTE_STOP_SEC_Partition_Core0_VAR_CLEARED_BOOLEAN
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core0_VAR_CLEARED_8
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(uint8, RTE_DATA) Rte_Rx_000081_LvPower_stLowpowerUp;
#define RTE_STOP_SEC_Partition_Core0_VAR_CLEARED_8
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core0_VAR_CLEARED_8
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(uint8, RTE_DATA) Rte_Rx_000109_MDF_stFrwhl;
#define RTE_STOP_SEC_Partition_Core0_VAR_CLEARED_8
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core0_VAR_CLEARED_32
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(float32, RTE_DATA) Rte_Rx_000111_MPC_IsFlt;
#define RTE_STOP_SEC_Partition_Core0_VAR_CLEARED_32
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core0_VAR_CLEARED_BOOLEAN
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(boolean, RTE_DATA) Rte_Rx_000137_NvM_flgAngAutoClbOffset;
#define RTE_STOP_SEC_Partition_Core0_VAR_CLEARED_BOOLEAN
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core0_VAR_CLEARED_BOOLEAN
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(boolean, RTE_DATA) Rte_Rx_000139_PCF_SLEnMotorAcc;
#define RTE_STOP_SEC_Partition_Core0_VAR_CLEARED_BOOLEAN
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core0_VAR_CLEARED_16
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(uint16, RTE_DATA) Rte_Rx_000142_PCF_Status;
#define RTE_STOP_SEC_Partition_Core0_VAR_CLEARED_16
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core0_VAR_CLEARED_BOOLEAN
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(boolean, RTE_DATA) Rte_Rx_000144_PCF_flgAllowPwmRun;
#define RTE_STOP_SEC_Partition_Core0_VAR_CLEARED_BOOLEAN
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core0_VAR_CLEARED_BOOLEAN
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(boolean, RTE_DATA) Rte_Rx_000146_PCF_flgShtDwnReq;
#define RTE_STOP_SEC_Partition_Core0_VAR_CLEARED_BOOLEAN
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core0_VAR_CLEARED_8
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(uint8, RTE_DATA) Rte_Rx_000147_PCF_stParkCtl;
#define RTE_STOP_SEC_Partition_Core0_VAR_CLEARED_8
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core0_VAR_CLEARED_8
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(uint8, RTE_DATA) Rte_Rx_000164_RCF_stAgRtrOfsCal;
#define RTE_STOP_SEC_Partition_Core0_VAR_CLEARED_8
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core0_VAR_CLEARED_8
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(uint8, RTE_DATA) Rte_Rx_000165_RCF_stEstAlRtrOfs;
#define RTE_STOP_SEC_Partition_Core0_VAR_CLEARED_8
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core0_VAR_CLEARED_BOOLEAN
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(boolean, RTE_DATA) Rte_Rx_000171_SCF_bHvReady;
#define RTE_STOP_SEC_Partition_Core0_VAR_CLEARED_BOOLEAN
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core0_VAR_CLEARED_BOOLEAN
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(boolean, RTE_DATA) Rte_Rx_000172_SCF_flgEmgReqInvDcha;
#define RTE_STOP_SEC_Partition_Core0_VAR_CLEARED_BOOLEAN
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core0_VAR_CLEARED_BOOLEAN
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(boolean, RTE_DATA) Rte_Rx_000174_SCF_flgUdcLowToTpc;
#define RTE_STOP_SEC_Partition_Core0_VAR_CLEARED_BOOLEAN
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core0_VAR_CLEARED_8
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(uint8, RTE_DATA) Rte_Rx_000176_SCF_stDisChg;
#define RTE_STOP_SEC_Partition_Core0_VAR_CLEARED_8
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core0_VAR_CLEARED_8
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(uint8, RTE_DATA) Rte_Rx_000177_SCF_stDrvCtl;
#define RTE_STOP_SEC_Partition_Core0_VAR_CLEARED_8
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core0_VAR_CLEARED_8
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(uint8, RTE_DATA) Rte_Rx_000178_SCF_stFFAction;
#define RTE_STOP_SEC_Partition_Core0_VAR_CLEARED_8
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core0_VAR_CLEARED_8
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(uint8, RTE_DATA) Rte_Rx_000181_SCF_stModeReqToTdc;
#define RTE_STOP_SEC_Partition_Core0_VAR_CLEARED_8
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core0_VAR_CLEARED_8
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(uint8, RTE_DATA) Rte_Rx_000182_SCF_stPreDrvCtl;
#define RTE_STOP_SEC_Partition_Core0_VAR_CLEARED_8
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core0_VAR_CLEARED_BOOLEAN
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(boolean, RTE_DATA) Rte_Rx_000204_CSPF_RecflgCrash;
#define RTE_STOP_SEC_Partition_Core0_VAR_CLEARED_BOOLEAN
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core0_VAR_CLEARED_BOOLEAN
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(boolean, RTE_DATA) Rte_Rx_000205_CSPF_RecflgDchaReq;
#define RTE_STOP_SEC_Partition_Core0_VAR_CLEARED_BOOLEAN
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core0_VAR_CLEARED_8
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(uint8, RTE_DATA) Rte_Rx_000209_CSPF_RecstMainReLay;
#define RTE_STOP_SEC_Partition_Core0_VAR_CLEARED_8
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core0_VAR_CLEARED_BOOLEAN
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(boolean, RTE_DATA) Rte_Rx_000224_Snapshot_flgPostDrvDone;
#define RTE_STOP_SEC_Partition_Core0_VAR_CLEARED_BOOLEAN
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core0_VAR_CLEARED_BOOLEAN
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(boolean, RTE_DATA) Rte_Rx_000248_Tja1043_flgCAN_WakeUp;
#define RTE_STOP_SEC_Partition_Core0_VAR_CLEARED_BOOLEAN
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core0_VAR_CLEARED_8
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(uint8, RTE_DATA) Rte_Rx_000253_VCF_stModeReq;
#define RTE_STOP_SEC_Partition_Core0_VAR_CLEARED_8
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_SCF_10ms)
/* Inline function call optimization; Rte_Call_RP_SWC_DEM_SCF_DisChgOvTiFail_SetEventStatus to Dem_SetEventStatus */
#define Rte_Call_RP_SWC_DEM_SCF_DisChgOvTiFail_SetEventStatus( EventStatus ) Dem_SetEventStatus(((VAR(Dem_EventIdType, AUTOMATIC))101), EventStatus)

#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_SCF_10ms)
/* Inline function call optimization; Rte_Call_RP_SWC_DEM_SCF_LowPwrShtDwnOvTiFail_SetEventStatus to Dem_SetEventStatus */
#define Rte_Call_RP_SWC_DEM_SCF_LowPwrShtDwnOvTiFail_SetEventStatus( EventStatus ) Dem_SetEventStatus(((VAR(Dem_EventIdType, AUTOMATIC))102), EventStatus)

#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_SCF_10ms)
/* Inline function call optimization; Rte_Call_RP_SWC_DEM_SCF_RunToDisChaFail_SetEventStatus to Dem_SetEventStatus */
#define Rte_Call_RP_SWC_DEM_SCF_RunToDisChaFail_SetEventStatus( EventStatus ) Dem_SetEventStatus(((VAR(Dem_EventIdType, AUTOMATIC))103), EventStatus)

#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_SCF_10ms)
/* Inline function call optimization; Rte_Call_RP_SWC_FIM_FiM_FlagforFR_GetFunctionPermission to FiM_GetFunctionPermission */
#define Rte_Call_RP_SWC_FIM_FiM_FlagforFR_GetFunctionPermission( Permission ) FiM_GetFunctionPermission(((VAR(FiM_FunctionIdType, AUTOMATIC))162), Permission)

#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_SCF_10ms)
/* Inline function call optimization; Rte_Call_RP_SWC_FIM_ReqFailrMod_GetFunctionPermission to FiM_GetFunctionPermission */
#define Rte_Call_RP_SWC_FIM_ReqFailrMod_GetFunctionPermission( Permission ) FiM_GetFunctionPermission(((VAR(FiM_FunctionIdType, AUTOMATIC))114), Permission)

#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_SCF_10ms)
/* Inline function call optimization; Rte_Call_RP_SWC_FIM_VCUComTimeOut_GetFunctionPermission to FiM_GetFunctionPermission */
#define Rte_Call_RP_SWC_FIM_VCUComTimeOut_GetFunctionPermission( Permission ) FiM_GetFunctionPermission(((VAR(FiM_FunctionIdType, AUTOMATIC))152), Permission)

#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_SCF_10ms)
/* Inline function call optimization; Rte_Call_RP_SWC_FIM_flgDchaFailr_GetFunctionPermission to FiM_GetFunctionPermission */
#define Rte_Call_RP_SWC_FIM_flgDchaFailr_GetFunctionPermission( Permission ) FiM_GetFunctionPermission(((VAR(FiM_FunctionIdType, AUTOMATIC))153), Permission)

#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_SCF_10ms)
/* Inline function call optimization; Rte_Call_RP_SWC_FIM_flgFaultLvFive_GetFunctionPermission to FiM_GetFunctionPermission */
#define Rte_Call_RP_SWC_FIM_flgFaultLvFive_GetFunctionPermission( Permission ) FiM_GetFunctionPermission(((VAR(FiM_FunctionIdType, AUTOMATIC))154), Permission)

#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_SCF_10ms)
/* Inline function call optimization; Rte_Call_RP_SWC_FIM_flgFaultLvFour_GetFunctionPermission to FiM_GetFunctionPermission */
#define Rte_Call_RP_SWC_FIM_flgFaultLvFour_GetFunctionPermission( Permission ) FiM_GetFunctionPermission(((VAR(FiM_FunctionIdType, AUTOMATIC))155), Permission)

#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_SCF_10ms)
/* Inline read optimization; Rte_Read_RP_SWC_CSPF_CSPF_RecflgCrash to direct access */
#define Rte_Read_RP_SWC_CSPF_CSPF_RecflgCrash( data )  ( ((*(data)) = Rte_Rx_000204_CSPF_RecflgCrash),((VAR(Std_ReturnType, AUTOMATIC))RTE_E_OK) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_SCF_10ms)
/* Inline read optimization; Rte_Read_RP_SWC_CSPF_CSPF_RecflgDchaReq to direct access */
#define Rte_Read_RP_SWC_CSPF_CSPF_RecflgDchaReq( data )  ( ((*(data)) = Rte_Rx_000205_CSPF_RecflgDchaReq),((VAR(Std_ReturnType, AUTOMATIC))RTE_E_OK) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_SCF_10ms)
/* Inline read optimization; Rte_Read_RP_SWC_CSPF_CSPF_RecstMainReLay to direct access */
#define Rte_Read_RP_SWC_CSPF_CSPF_RecstMainReLay( data )  ( ((*(data)) = Rte_Rx_000209_CSPF_RecstMainReLay),((VAR(Std_ReturnType, AUTOMATIC))RTE_E_OK) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_SCF_10ms)
/* Inline read optimization; Rte_Read_RP_SWC_HSPF_HSPF_Wake to direct access */
#define Rte_Read_RP_SWC_HSPF_HSPF_Wake( data )  ( ((*(data)) = Rte_Rx_000041_HSPF_Wake),((VAR(Std_ReturnType, AUTOMATIC))RTE_E_OK) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_SCF_10ms)
/* Inline read optimization; Rte_Read_RP_SWC_HSPF_HSPF_bt15 to direct access */
#define Rte_Read_RP_SWC_HSPF_HSPF_bt15( data )  ( ((*(data)) = Rte_Rx_000042_HSPF_bt15),((VAR(Std_ReturnType, AUTOMATIC))RTE_E_OK) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_SCF_10ms)
/* Inline read optimization; Rte_Read_RP_SWC_HSPF_HSPF_flgCrash to direct access */
#define Rte_Read_RP_SWC_HSPF_HSPF_flgCrash( data )  ( ((*(data)) = Rte_Rx_000043_HSPF_flgCrash),((VAR(Std_ReturnType, AUTOMATIC))RTE_E_OK) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_SCF_10ms)
/* Inline read optimization; Rte_Read_RP_SWC_HSPF_HSPF_nSlowFlt to direct access */
#define Rte_Read_RP_SWC_HSPF_HSPF_nSlowFlt( data )  ( ((*(data)) = Rte_Rx_000048_HSPF_nSlowFlt),((VAR(Std_ReturnType, AUTOMATIC))RTE_E_OK) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_SCF_10ms)
/* Inline read optimization; Rte_Read_RP_SWC_HSPF_HSPF_stIphaOffCal to direct access */
#define Rte_Read_RP_SWC_HSPF_HSPF_stIphaOffCal( data )  ( ((*(data)) = Rte_Rx_000050_HSPF_stIphaOffCal),((VAR(Std_ReturnType, AUTOMATIC))RTE_E_OK) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_SCF_10ms)
/* Inline read optimization; Rte_Read_RP_SWC_HSPF_HSPF_uDcLnkSlowFlt to direct access */
#define Rte_Read_RP_SWC_HSPF_HSPF_uDcLnkSlowFlt( data )  ( ((*(data)) = Rte_Rx_000066_HSPF_uDcLnkSlowFlt),((VAR(Std_ReturnType, AUTOMATIC))RTE_E_OK) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_SCF_10ms)
/* Inline read optimization; Rte_Read_RP_SWC_Igbt_Igbt_flgGateDrvRdyHs to direct access */
#define Rte_Read_RP_SWC_Igbt_Igbt_flgGateDrvRdyHs( data )  ( ((*(data)) = Rte_Rx_000079_Igbt_flgGateDrvRdyHs),((VAR(Std_ReturnType, AUTOMATIC))RTE_E_OK) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_SCF_10ms)
/* Inline read optimization; Rte_Read_RP_SWC_Igbt_Igbt_flgGateDrvRdyLs to direct access */
#define Rte_Read_RP_SWC_Igbt_Igbt_flgGateDrvRdyLs( data )  ( ((*(data)) = Rte_Rx_000080_Igbt_flgGateDrvRdyLs),((VAR(Std_ReturnType, AUTOMATIC))RTE_E_OK) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_SCF_10ms)
/* Inline read optimization; Rte_Read_RP_SWC_LvPower_LvPower_stLowpowerUp to direct access */
#define Rte_Read_RP_SWC_LvPower_LvPower_stLowpowerUp( data )  ( ((*(data)) = Rte_Rx_000081_LvPower_stLowpowerUp),((VAR(Std_ReturnType, AUTOMATIC))RTE_E_OK) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_SCF_10ms)
/* Inline read optimization; Rte_Read_RP_SWC_MDF_MDF_stFrwhl to direct access */
#define Rte_Read_RP_SWC_MDF_MDF_stFrwhl( data )  ( ((*(data)) = Rte_Rx_000109_MDF_stFrwhl),((VAR(Std_ReturnType, AUTOMATIC))RTE_E_OK) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_SCF_10ms)
/* Inline read optimization; Rte_Read_RP_SWC_MPC_MPC_IsFlt to direct access */
#define Rte_Read_RP_SWC_MPC_MPC_IsFlt( data )  ( ((*(data)) = Rte_Rx_000111_MPC_IsFlt),((VAR(Std_ReturnType, AUTOMATIC))RTE_E_OK) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_SCF_10ms)
/* Inline read optimization; Rte_Read_RP_SWC_NvM_NvM_flgAngAutoClbOffset to direct access */
#define Rte_Read_RP_SWC_NvM_NvM_flgAngAutoClbOffset( data )  ( ((*(data)) = Rte_Rx_000137_NvM_flgAngAutoClbOffset),((VAR(Std_ReturnType, AUTOMATIC))RTE_E_OK) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_SCF_10ms)
/* Inline read optimization; Rte_Read_RP_SWC_PCF_PCF_SLEnMotorAcc to direct access */
#define Rte_Read_RP_SWC_PCF_PCF_SLEnMotorAcc( data )  ( ((*(data)) = Rte_Rx_000139_PCF_SLEnMotorAcc),((VAR(Std_ReturnType, AUTOMATIC))RTE_E_OK) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_SCF_10ms)
/* Inline read optimization; Rte_Read_RP_SWC_PCF_PCF_Status to direct access */
#define Rte_Read_RP_SWC_PCF_PCF_Status( data )  ( ((*(data)) = Rte_Rx_000142_PCF_Status),((VAR(Std_ReturnType, AUTOMATIC))RTE_E_OK) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_SCF_10ms)
/* Inline read optimization; Rte_Read_RP_SWC_PCF_PCF_flgAllowPwmRun to direct access */
#define Rte_Read_RP_SWC_PCF_PCF_flgAllowPwmRun( data )  ( ((*(data)) = Rte_Rx_000144_PCF_flgAllowPwmRun),((VAR(Std_ReturnType, AUTOMATIC))RTE_E_OK) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_SCF_10ms)
/* Inline read optimization; Rte_Read_RP_SWC_PCF_PCF_flgShtDwnReq to direct access */
#define Rte_Read_RP_SWC_PCF_PCF_flgShtDwnReq( data )  ( ((*(data)) = Rte_Rx_000146_PCF_flgShtDwnReq),((VAR(Std_ReturnType, AUTOMATIC))RTE_E_OK) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_SCF_10ms)
/* Inline read optimization; Rte_Read_RP_SWC_PCF_PCF_stParkCtl to direct access */
#define Rte_Read_RP_SWC_PCF_PCF_stParkCtl( data )  ( ((*(data)) = Rte_Rx_000147_PCF_stParkCtl),((VAR(Std_ReturnType, AUTOMATIC))RTE_E_OK) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_SCF_10ms)
/* Inline read optimization; Rte_Read_RP_SWC_RCF_RCF_stAgRtrOfsCal to direct access */
#define Rte_Read_RP_SWC_RCF_RCF_stAgRtrOfsCal( data )  ( ((*(data)) = Rte_Rx_000164_RCF_stAgRtrOfsCal),((VAR(Std_ReturnType, AUTOMATIC))RTE_E_OK) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_SCF_10ms)
/* Inline read optimization; Rte_Read_RP_SWC_RCF_RCF_stEstAlRtrOfs to direct access */
#define Rte_Read_RP_SWC_RCF_RCF_stEstAlRtrOfs( data )  ( ((*(data)) = Rte_Rx_000165_RCF_stEstAlRtrOfs),((VAR(Std_ReturnType, AUTOMATIC))RTE_E_OK) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_SCF_10ms)
/* Inline read optimization; Rte_Read_RP_SWC_Snapshot_Snapshot_flgPostDrvDone to direct access */
#define Rte_Read_RP_SWC_Snapshot_Snapshot_flgPostDrvDone( data )  ( ((*(data)) = Rte_Rx_000224_Snapshot_flgPostDrvDone),((VAR(Std_ReturnType, AUTOMATIC))RTE_E_OK) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_SCF_10ms)
/* Inline read optimization; Rte_Read_RP_SWC_Tja1043_Tja1043_flgCAN_WakeUp to direct access */
#define Rte_Read_RP_SWC_Tja1043_Tja1043_flgCAN_WakeUp( data )  ( ((*(data)) = Rte_Rx_000248_Tja1043_flgCAN_WakeUp),((VAR(Std_ReturnType, AUTOMATIC))RTE_E_OK) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_SCF_10ms)
/* Inline read optimization; Rte_Read_RP_SWC_VCF_VCF_stModeReq to direct access */
#define Rte_Read_RP_SWC_VCF_VCF_stModeReq( data )  ( ((*(data)) = Rte_Rx_000253_VCF_stModeReq),((VAR(Std_ReturnType, AUTOMATIC))RTE_E_OK) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_SCF_10ms)
#define Rte_Write_PP_SWC_SCF_SCF_FIM_ReqFailrMod( data ) (Rte_Write_SWC_SCF_PP_SWC_SCF_SCF_FIM_ReqFailrMod(data))
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_SCF_10ms)
/* Inline Write optimization; Rte_Write_PP_SWC_SCF_SCF_bHvReady to direct write */
#define Rte_Write_PP_SWC_SCF_SCF_bHvReady( data ) ( (Rte_Rx_000171_SCF_bHvReady = data), RTE_E_OK )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_SCF_10ms)
/* Inline write optimization; Rte_Write_PP_SWC_SCF_SCF_flgActvDcha to null body */
#define Rte_Write_PP_SWC_SCF_SCF_flgActvDcha( data )  ( ((VAR(Std_ReturnType, AUTOMATIC))RTE_E_OK) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_SCF_10ms)
/* Inline write optimization; Rte_Write_PP_SWC_SCF_SCF_flgDataStrgBgnToBsw to null body */
#define Rte_Write_PP_SWC_SCF_SCF_flgDataStrgBgnToBsw( data )  ( ((VAR(Std_ReturnType, AUTOMATIC))RTE_E_OK) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_SCF_10ms)
/* Inline Write optimization; Rte_Write_PP_SWC_SCF_SCF_flgEmgReqInvDcha to direct write */
#define Rte_Write_PP_SWC_SCF_SCF_flgEmgReqInvDcha( data ) ( (Rte_Rx_000172_SCF_flgEmgReqInvDcha = data), RTE_E_OK )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_SCF_10ms)
#define Rte_Write_PP_SWC_SCF_SCF_flgEnDchaToMc( data ) (Rte_Write_SWC_SCF_PP_SWC_SCF_SCF_flgEnDchaToMc(data))
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_SCF_10ms)
/* Inline Write optimization; Rte_Write_PP_SWC_SCF_SCF_flgUdcLowToTpc to direct write */
#define Rte_Write_PP_SWC_SCF_SCF_flgUdcLowToTpc( data ) ( (Rte_Rx_000174_SCF_flgUdcLowToTpc = data), RTE_E_OK )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_SCF_10ms)
#define Rte_Write_PP_SWC_SCF_SCF_flginitPI( data ) (Rte_Write_SWC_SCF_PP_SWC_SCF_SCF_flginitPI(data))
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_SCF_10ms)
/* Inline Write optimization; Rte_Write_PP_SWC_SCF_SCF_stDisChg to direct write */
#define Rte_Write_PP_SWC_SCF_SCF_stDisChg( data ) ( (Rte_Rx_000176_SCF_stDisChg = data), RTE_E_OK )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_SCF_10ms)
/* Inline Write optimization; Rte_Write_PP_SWC_SCF_SCF_stDrvCtl to direct write */
#define Rte_Write_PP_SWC_SCF_SCF_stDrvCtl( data ) ( (Rte_Rx_000177_SCF_stDrvCtl = data), RTE_E_OK )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_SCF_10ms)
/* Inline Write optimization; Rte_Write_PP_SWC_SCF_SCF_stFFAction to direct write */
#define Rte_Write_PP_SWC_SCF_SCF_stFFAction( data ) ( (Rte_Rx_000178_SCF_stFFAction = data), RTE_E_OK )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_SCF_10ms)
#define Rte_Write_PP_SWC_SCF_SCF_stGateDrv( data ) (Rte_Write_SWC_SCF_PP_SWC_SCF_SCF_stGateDrv(data))
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_SCF_10ms)
/* Inline Write optimization; Rte_Write_PP_SWC_SCF_SCF_stModeReqToTdc to direct write */
#define Rte_Write_PP_SWC_SCF_SCF_stModeReqToTdc( data ) ( (Rte_Rx_000181_SCF_stModeReqToTdc = data), RTE_E_OK )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_SCF_10ms)
/* Inline Write optimization; Rte_Write_PP_SWC_SCF_SCF_stPreDrvCtl to direct write */
#define Rte_Write_PP_SWC_SCF_SCF_stPreDrvCtl( data ) ( (Rte_Rx_000182_SCF_stPreDrvCtl = data), RTE_E_OK )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_SCF_10ms)
#define Rte_Write_PP_SWC_SCF_SCF_stPwmMode( data ) (Rte_Write_SWC_SCF_PP_SWC_SCF_SCF_stPwmMode(data))
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_SCF_10ms)
#define Rte_Write_PP_SWC_SCF_SCF_stSysCtl( data ) (Rte_Write_SWC_SCF_PP_SWC_SCF_SCF_stSysCtl(data))
#endif

#endif /* RTE_CORE */

/*******************************************************
 ***
 *** RE Prototypes
 ***
 *******************************************************/

#define SWC_SCF_START_SEC_CODE
#include "SWC_SCF_MemMap.h" /*lint !e537 permit multiple inclusion */
FUNC(void, SWC_SCF_CODE) SWC_SCF_10ms(void);
FUNC(void, SWC_SCF_CODE) SWC_SCF_Init(void);
#define SWC_SCF_STOP_SEC_CODE
#include "SWC_SCF_MemMap.h" /*lint !e537 permit multiple inclusion */

/* Initial values for data element prototypes */

#ifdef __cplusplus
} /* extern C */
#endif /* __cplusplus */

#endif /* !RTE_SWC_SCF_H */
