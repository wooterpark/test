/** @file     Rte_SWC_PhC.h
  *
  * @brief    Application header file
  *
  * @note     AUTOMATICALLY GENERATED FILE! DO NOT EDIT!
  *
  * @note     Generated by ETAS RTA-RTE
  * @note     Version 6.6.0 
  */

#ifndef RTE_SWC_PHC_H
#define RTE_SWC_PHC_H

#ifndef RTE_CORE
#ifdef RTE_APPLICATION_HEADER_FILE
#error Multiple application header files included.
#endif /* RTE_APPLICATION_HEADER_FILE */
#define RTE_APPLICATION_HEADER_FILE
#endif /* RTE_CORE */

/*******************************************************
 ***
 *** Includes
 ***
 *******************************************************/

#include "Rte.h"
#include "Rte_Intl.h"
#include "Rte_SWC_PhC_Type.h"

#include "Rte_DataHandleType.h"

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

#if defined(RTE_RUNNABLEAPI_RE_PhC_FaultHand_2ms)
   /* Do nothing for this and all elif clauses below (rte_sws_2751) */
#elif defined(RTE_RUNNABLEAPI_RE_PhC_GetResult_MCUHw_100us)
#else
   /* None of above defined so define value including all APIs (rte_sws_2751) */
   #define RTE_PRV_ALL_API
#endif

/*******************************************************
 ***
 *** Constants
 ***
 *******************************************************/


/*******************************************************
 ***
 *** Public Types
 ***
 *******************************************************/

/* BEGIN: SWC types (core visible) */
struct Rte_CDS_SWC_PhC {
   uint8 Rte_Dummy;
};
typedef struct Rte_CDS_SWC_PhC Rte_CDS_SWC_PhC;
/* END: SWC types (core visible) */

/*******************************************************
 ***
 *** Private Types
 ***
 *******************************************************/

/* BEGIN: SWC types (private) */
/* END: SWC types (private) */

/*******************************************************
 ***
 *** Instance Declarations
 ***
 *******************************************************/

#define RTE_START_SEC_Partition_Core0_CONST_UNSPECIFIED
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern CONST(struct Rte_CDS_SWC_PhC, RTE_CONST) Rte_Inst_SWC_PhC;
#define RTE_STOP_SEC_Partition_Core0_CONST_UNSPECIFIED
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */


#ifndef RTE_CORE
typedef CONSTP2CONST(struct Rte_CDS_SWC_PhC, AUTOMATIC, RTE_CONST) Rte_Instance;
#endif /* RTE_CORE */

/*******************************************************
 ***
 *** API Mapping macros
 ***
 *******************************************************/

/* API Mapping Macros */
#ifndef RTE_CORE

#define RTE_SWC_PHC_START_SEC_CODE
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
FUNC(Std_ReturnType, RTE_CODE) Rte_Write_SWC_PhC_PP_SWC_PhC_PhC_iUNoOff(VAR(uint16, AUTOMATIC) data);
FUNC(Std_ReturnType, RTE_CODE) Rte_Write_SWC_PhC_PP_SWC_PhC_PhC_iVNoOff(VAR(uint16, AUTOMATIC) data);
FUNC(Std_ReturnType, RTE_CODE) Rte_Write_SWC_PhC_PP_SWC_PhC_PhC_iWNoOff(VAR(uint16, AUTOMATIC) data);
FUNC(Std_ReturnType, RTE_CODE) Rte_Write_SWC_PhC_PP_SWC_PhC_PhC_uDcLnkLowMcu(VAR(float32, AUTOMATIC) data);
#define RTE_SWC_PHC_STOP_SEC_CODE
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_PhC_GetResult_MCUHw_100us)
#define Rte_Write_PP_SWC_PhC_PhC_iUNoOff( data ) (Rte_Write_SWC_PhC_PP_SWC_PhC_PhC_iUNoOff(data))
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_PhC_GetResult_MCUHw_100us)
#define Rte_Write_PP_SWC_PhC_PhC_iVNoOff( data ) (Rte_Write_SWC_PhC_PP_SWC_PhC_PhC_iVNoOff(data))
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_PhC_GetResult_MCUHw_100us)
#define Rte_Write_PP_SWC_PhC_PhC_iWNoOff( data ) (Rte_Write_SWC_PhC_PP_SWC_PhC_PhC_iWNoOff(data))
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_PhC_GetResult_MCUHw_100us)
#define Rte_Write_PP_SWC_PhC_PhC_uDcLnkLowMcu( data ) (Rte_Write_SWC_PhC_PP_SWC_PhC_PhC_uDcLnkLowMcu(data))
#endif

#endif /* RTE_CORE */

/*******************************************************
 ***
 *** RE Prototypes
 ***
 *******************************************************/

#define SWC_PhC_START_SEC_CODE
#include "SWC_PhC_MemMap.h" /*lint !e537 permit multiple inclusion */
FUNC(void, SWC_PhC_CODE) SWC_PhC_FaultHand_Task_2ms(void);
FUNC(void, SWC_PhC_CODE) SWC_PhC_GetResult_MCUHwAdc_Task_100us(void);
#define SWC_PhC_STOP_SEC_CODE
#include "SWC_PhC_MemMap.h" /*lint !e537 permit multiple inclusion */

/* Initial values for data element prototypes */

#ifdef __cplusplus
} /* extern C */
#endif /* __cplusplus */

#endif /* !RTE_SWC_PHC_H */
