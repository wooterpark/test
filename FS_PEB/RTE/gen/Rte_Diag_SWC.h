/** @file     Rte_Diag_SWC.h
  *
  * @brief    Application header file
  *
  * @note     AUTOMATICALLY GENERATED FILE! DO NOT EDIT!
  *
  * @note     Generated by ETAS RTA-RTE
  * @note     Version 6.6.0 
  */

#ifndef RTE_DIAG_SWC_H
#define RTE_DIAG_SWC_H

#ifndef RTE_CORE
#ifdef RTE_APPLICATION_HEADER_FILE
#error Multiple application header files included.
#endif /* RTE_APPLICATION_HEADER_FILE */
#define RTE_APPLICATION_HEADER_FILE
#endif /* RTE_CORE */

/*******************************************************
 ***
 *** Includes
 ***
 *******************************************************/

#include "Rte.h"
#include "Rte_Intl.h"
#include "Rte_Diag_SWC_Type.h"

#include "Rte_DataHandleType.h"

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

#if defined(RTE_RUNNABLEAPI_RE_FiM_Swc)
   /* Do nothing for this and all elif clauses below (rte_sws_2751) */
#elif defined(RTE_RUNNABLEAPI_RE_Swc_Dem_Periodic)
#elif defined(RTE_RUNNABLEAPI_Runnable_Dcm_Swc)
#elif defined(RTE_RUNNABLEAPI_SwcDcmEcuHardReset)
#elif defined(RTE_RUNNABLEAPI_Swc_DSP_SEC_LEV_L1_CK)
#elif defined(RTE_RUNNABLEAPI_Swc_DSP_SEC_LEV_L1_GS)
#elif defined(RTE_RUNNABLEAPI_Swc_DSP_SEC_LEV_L2_CK)
#elif defined(RTE_RUNNABLEAPI_Swc_DSP_SEC_LEV_L2_GS)
#elif defined(RTE_RUNNABLEAPI_Swc_DSP_SEC_LEV_L3_CK)
#elif defined(RTE_RUNNABLEAPI_Swc_DSP_SEC_LEV_L3_GS)
#elif defined(RTE_RUNNABLEAPI_Swc_DSP_SEC_LEV_L4_CK)
#elif defined(RTE_RUNNABLEAPI_Swc_DSP_SEC_LEV_L4_GS)
#elif defined(RTE_RUNNABLEAPI_Swc_RoutineServices_DcmDspRoutine_CheckProgCond_Result)
#elif defined(RTE_RUNNABLEAPI_Swc_RoutineServices_DcmDspRoutine_CheckProgCond_Start)
#elif defined(RTE_RUNNABLEAPI_Swc_RoutineServices_DcmDspRoutine_CheckProgCond_Stop)
#elif defined(RTE_RUNNABLEAPI_Swc_RoutineServices_DcmDspRoutine_Test_Result)
#elif defined(RTE_RUNNABLEAPI_Swc_RoutineServices_DcmDspRoutine_Test_Start)
#elif defined(RTE_RUNNABLEAPI_Swc_RoutineServices_DcmDspRoutine_Test_Stop)
#else
   /* None of above defined so define value including all APIs (rte_sws_2751) */
   #define RTE_PRV_ALL_API
#endif

/*******************************************************
 ***
 *** Constants
 ***
 *******************************************************/

#ifndef RTE_CORE
#define RTE_E_DCMServices_E_NOT_OK ((Std_ReturnType)1)
#define RTE_E_DCMServices_E_OK ((Std_ReturnType)0)
#define RTE_E_DTCSuppression_E_NOT_OK ((Std_ReturnType)1)
#define RTE_E_DTCSuppression_E_OK ((Std_ReturnType)0)
#define RTE_E_DiagnosticInfo_DEM_E_NO_DTC_AVAILABLE ((Std_ReturnType)2)
#define RTE_E_DiagnosticInfo_DEM_E_NO_FDC_AVAILABLE ((Std_ReturnType)3)
#define RTE_E_DiagnosticInfo_E_NOT_OK ((Std_ReturnType)1)
#define RTE_E_DiagnosticInfo_E_OK ((Std_ReturnType)0)
#define RTE_E_DiagnosticMonitor_E_NOT_OK ((Std_ReturnType)1)
#define RTE_E_DiagnosticMonitor_E_OK ((Std_ReturnType)0)
#define RTE_E_EcuM_ShutdownTarget_E_NOT_OK ((Std_ReturnType)1)
#define RTE_E_FunctionInhibition_E_NOT_OK ((Std_ReturnType)1)
#define RTE_E_FunctionInhibition_E_OK ((Std_ReturnType)0)
#define RTE_E_OperationCycle_E_NOT_OK ((Std_ReturnType)1)
#define RTE_E_OperationCycle_E_OK ((Std_ReturnType)0)
#define RTE_E_RoutineServices_DcmDspRoutine_CheckPgmPreCond_DCM_E_FORCE_RCRRP ((Std_ReturnType)12)
#define RTE_E_RoutineServices_DcmDspRoutine_CheckPgmPreCond_DCM_E_PENDING ((Std_ReturnType)10)
#define RTE_E_RoutineServices_DcmDspRoutine_CheckPgmPreCond_E_NOT_OK ((Std_ReturnType)1)
#define RTE_E_RoutineServices_DcmDspRoutine_CheckPgmPreCond_E_OK ((Std_ReturnType)0)
#define RTE_E_RoutineServices_DcmDspRoutine_Test_DCM_E_FORCE_RCRRP ((Std_ReturnType)12)
#define RTE_E_RoutineServices_DcmDspRoutine_Test_DCM_E_PENDING ((Std_ReturnType)10)
#define RTE_E_RoutineServices_DcmDspRoutine_Test_E_NOT_OK ((Std_ReturnType)1)
#define RTE_E_RoutineServices_DcmDspRoutine_Test_E_OK ((Std_ReturnType)0)
#define RTE_E_SecurityAccess_DSP_SEC_LEV_L1_DCM_E_COMPARE_KEY_FAILED ((Std_ReturnType)11)
#define RTE_E_SecurityAccess_DSP_SEC_LEV_L1_DCM_E_PENDING ((Std_ReturnType)10)
#define RTE_E_SecurityAccess_DSP_SEC_LEV_L1_E_NOT_OK ((Std_ReturnType)1)
#define RTE_E_SecurityAccess_DSP_SEC_LEV_L1_E_OK ((Std_ReturnType)0)
#define RTE_E_SecurityAccess_DSP_SEC_LEV_L2_DCM_E_COMPARE_KEY_FAILED ((Std_ReturnType)11)
#define RTE_E_SecurityAccess_DSP_SEC_LEV_L2_DCM_E_PENDING ((Std_ReturnType)10)
#define RTE_E_SecurityAccess_DSP_SEC_LEV_L2_E_NOT_OK ((Std_ReturnType)1)
#define RTE_E_SecurityAccess_DSP_SEC_LEV_L2_E_OK ((Std_ReturnType)0)
#define RTE_E_SecurityAccess_DSP_SEC_LEV_L3_DCM_E_COMPARE_KEY_FAILED ((Std_ReturnType)11)
#define RTE_E_SecurityAccess_DSP_SEC_LEV_L3_DCM_E_PENDING ((Std_ReturnType)10)
#define RTE_E_SecurityAccess_DSP_SEC_LEV_L3_E_NOT_OK ((Std_ReturnType)1)
#define RTE_E_SecurityAccess_DSP_SEC_LEV_L3_E_OK ((Std_ReturnType)0)
#define RTE_E_SecurityAccess_DSP_SEC_LEV_L4_DCM_E_COMPARE_KEY_FAILED ((Std_ReturnType)11)
#define RTE_E_SecurityAccess_DSP_SEC_LEV_L4_DCM_E_PENDING ((Std_ReturnType)10)
#define RTE_E_SecurityAccess_DSP_SEC_LEV_L4_E_NOT_OK ((Std_ReturnType)1)
#define RTE_E_SecurityAccess_DSP_SEC_LEV_L4_E_OK ((Std_ReturnType)0)
#endif /* RTE_CORE */

/*******************************************************
 ***
 *** Public Types
 ***
 *******************************************************/

/* BEGIN: SWC types (core visible) */
struct Rte_CDS_Diag_SWC {
   /* Data handles */
   P2VAR(Rte_DE_uint8, AUTOMATIC, RTE_DATA) Runnable_Dcm_Swc_RPort_TST_Diag_TestNumber_uint8;
};
typedef struct Rte_CDS_Diag_SWC Rte_CDS_Diag_SWC;
/* END: SWC types (core visible) */

/*******************************************************
 ***
 *** Private Types
 ***
 *******************************************************/

/* BEGIN: SWC types (private) */
/* END: SWC types (private) */

/*******************************************************
 ***
 *** Instance Declarations
 ***
 *******************************************************/

#define RTE_START_SEC_Partition_Core0_CONST_UNSPECIFIED
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern CONST(struct Rte_CDS_Diag_SWC, RTE_CONST) Rte_Inst_Diag_SWC;
#define RTE_STOP_SEC_Partition_Core0_CONST_UNSPECIFIED
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */


#ifndef RTE_CORE
typedef CONSTP2CONST(struct Rte_CDS_Diag_SWC, AUTOMATIC, RTE_CONST) Rte_Instance;
#endif /* RTE_CORE */

/*******************************************************
 ***
 *** API Mapping macros
 ***
 *******************************************************/

/* API Mapping Macros */
#ifndef RTE_CORE

#define Dcm_START_SEC_CODE
#include "Dcm_MemMap.h" /*lint !e537 permit multiple inclusion */
FUNC(Std_ReturnType, Dcm_CODE) Dcm_GetActiveProtocol(CONSTP2VAR(Dcm_ProtocolType, AUTOMATIC, RTE_APPL_DATA) ActiveProtocol);

FUNC(Std_ReturnType, Dcm_CODE) Dcm_GetSecurityLevel(CONSTP2VAR(Dcm_SecLevelType, AUTOMATIC, RTE_APPL_DATA) SecLevel);

FUNC(Std_ReturnType, Dcm_CODE) Dcm_GetSesCtrlType(CONSTP2VAR(Dcm_SesCtrlType, AUTOMATIC, RTE_APPL_DATA) SesCtrlType);

FUNC(Std_ReturnType, Dcm_CODE) Dcm_ResetToDefaultSession(void);

#define Dcm_STOP_SEC_CODE
#include "Dcm_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core0_CONST_UNSPECIFIED
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern CONST(Rte_SelfType_Dcm, RTE_CONST) Rte_Self_CPT_Dcm;
#define RTE_STOP_SEC_Partition_Core0_CONST_UNSPECIFIED
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_DIAG_SWC_START_SEC_CODE
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
FUNC(Std_ReturnType, RTE_CODE) Rte_Read_Diag_SWC_RPort_DataServices_DspData_SYS_SUP_ID_F18A_Data(CONSTP2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) data);
FUNC(Std_ReturnType, RTE_CODE) Rte_Switch_Diag_SWC_PPort_Mdg2_MDGP_Mdg2(VAR(uint8, AUTOMATIC) data);
FUNC(Std_ReturnType, RTE_CODE) Rte_Write_Diag_SWC_PPort_DataServices_DspData_ASW_VER_F189_Data(P2CONST(uint8, AUTOMATIC, RTE_APPL_DATA) data);
FUNC(Std_ReturnType, RTE_CODE) Rte_Write_Diag_SWC_PPort_DataServices_DspData_MANU_DATE_F18B_Data(P2CONST(uint8, AUTOMATIC, RTE_APPL_DATA) data);
FUNC(Std_ReturnType, RTE_CODE) Rte_Write_Diag_SWC_PPort_DataServices_DspData_SYS_SUP_ID_F18A_Data(P2CONST(uint8, AUTOMATIC, RTE_APPL_DATA) data);
#define RTE_DIAG_SWC_STOP_SEC_CODE
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_VAR_CLEARED_8
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(Rte_ImplicitBufsType, RTE_DATA) Rte_ImplicitBufs;
#define RTE_STOP_SEC_VAR_CLEARED_8
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_PARTITION_CORE0_START_SEC_VAR_INIT_8
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(uint8, RTE_DATA) Rte_ModeCurrent_4;
#define RTE_PARTITION_CORE0_STOP_SEC_VAR_INIT_8
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_PARTITION_CORE0_START_SEC_VAR_INIT_8
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(uint8, RTE_DATA) Rte_ModeCurrent_5;
#define RTE_PARTITION_CORE0_STOP_SEC_VAR_INIT_8
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_Swc_Dem_Periodic)
/* Inline read optimization; Rte_Call_RPort_ControlDTCSuppression_SetDTCSuppression to direct read */
#define Rte_Call_RPort_ControlDTCSuppression_SetDTCSuppression( DTC, DTCFormat, SuppressionStatus )  ( ((VAR(Std_ReturnType, AUTOMATIC))RTE_E_UNCONNECTED) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_Runnable_Dcm_Swc)
/* Inline function call optimization; Rte_Call_RPort_DCMServices_GetActiveProtocol to Dcm_GetActiveProtocol */
#define Rte_Call_RPort_DCMServices_GetActiveProtocol( ActiveProtocol ) Dcm_GetActiveProtocol(ActiveProtocol)

#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_Runnable_Dcm_Swc)
/* Inline function call optimization; Rte_Call_RPort_DCMServices_GetSecurityLevel to Dcm_GetSecurityLevel */
#define Rte_Call_RPort_DCMServices_GetSecurityLevel( SecLevel ) Dcm_GetSecurityLevel(SecLevel)

#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_Runnable_Dcm_Swc)
/* Inline function call optimization; Rte_Call_RPort_DCMServices_GetSesCtrlType to Dcm_GetSesCtrlType */
#define Rte_Call_RPort_DCMServices_GetSesCtrlType( SesCtrlType ) Dcm_GetSesCtrlType(SesCtrlType)

#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_Runnable_Dcm_Swc)
/* Inline function call optimization; Rte_Call_RPort_DCMServices_ResetToDefaultSession to Dcm_ResetToDefaultSession */
#define Rte_Call_RPort_DCMServices_ResetToDefaultSession() Dcm_ResetToDefaultSession()

#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_SwcDcmEcuHardReset)
/* Inline read optimization; Rte_Call_RPort_EcuMSelectResetTarget_SelectShutdownTarget to direct read */
#define Rte_Call_RPort_EcuMSelectResetTarget_SelectShutdownTarget( shutdownTarget, shutdownMode )  ( ((VAR(Std_ReturnType, AUTOMATIC))RTE_E_UNCONNECTED) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_Swc_Dem_Periodic)
/* Inline read optimization; Rte_Call_RPort_Event_Event_LostComm_MPDU_ClearPrestoredFreezeFrame to direct read */
#define Rte_Call_RPort_Event_Event_LostComm_MPDU_ClearPrestoredFreezeFrame()  ( ((VAR(Std_ReturnType, AUTOMATIC))RTE_E_UNCONNECTED) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_Swc_Dem_Periodic)
/* Inline read optimization; Rte_Call_RPort_Event_Event_LostComm_MPDU_PrestoreFreezeFrame to direct read */
#define Rte_Call_RPort_Event_Event_LostComm_MPDU_PrestoreFreezeFrame()  ( ((VAR(Std_ReturnType, AUTOMATIC))RTE_E_UNCONNECTED) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_Swc_Dem_Periodic)
/* Inline read optimization; Rte_Call_RPort_Event_Event_LostComm_MPDU_ResetEventStatus to direct read */
#define Rte_Call_RPort_Event_Event_LostComm_MPDU_ResetEventStatus()  ( ((VAR(Std_ReturnType, AUTOMATIC))RTE_E_UNCONNECTED) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_Swc_Dem_Periodic)
/* Inline read optimization; Rte_Call_RPort_Event_Event_LostComm_MPDU_SetEventStatus to direct read */
#define Rte_Call_RPort_Event_Event_LostComm_MPDU_SetEventStatus( EventStatus )  ( ((VAR(Std_ReturnType, AUTOMATIC))RTE_E_UNCONNECTED) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_Swc_Dem_Periodic)
/* Inline read optimization; Rte_Call_RPort_Event_Event_LostComm_SEN_1_ClearPrestoredFreezeFrame to direct read */
#define Rte_Call_RPort_Event_Event_LostComm_SEN_1_ClearPrestoredFreezeFrame()  ( ((VAR(Std_ReturnType, AUTOMATIC))RTE_E_UNCONNECTED) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_Swc_Dem_Periodic)
/* Inline read optimization; Rte_Call_RPort_Event_Event_LostComm_SEN_1_PrestoreFreezeFrame to direct read */
#define Rte_Call_RPort_Event_Event_LostComm_SEN_1_PrestoreFreezeFrame()  ( ((VAR(Std_ReturnType, AUTOMATIC))RTE_E_UNCONNECTED) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_Swc_Dem_Periodic)
/* Inline read optimization; Rte_Call_RPort_Event_Event_LostComm_SEN_1_ResetEventStatus to direct read */
#define Rte_Call_RPort_Event_Event_LostComm_SEN_1_ResetEventStatus()  ( ((VAR(Std_ReturnType, AUTOMATIC))RTE_E_UNCONNECTED) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_Swc_Dem_Periodic)
/* Inline read optimization; Rte_Call_RPort_Event_Event_LostComm_SEN_1_SetEventStatus to direct read */
#define Rte_Call_RPort_Event_Event_LostComm_SEN_1_SetEventStatus( EventStatus )  ( ((VAR(Std_ReturnType, AUTOMATIC))RTE_E_UNCONNECTED) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_Swc_Dem_Periodic)
/* Inline read optimization; Rte_Call_RPort_Event_Event_LostComm_SEN_ClearPrestoredFreezeFrame to direct read */
#define Rte_Call_RPort_Event_Event_LostComm_SEN_ClearPrestoredFreezeFrame()  ( ((VAR(Std_ReturnType, AUTOMATIC))RTE_E_UNCONNECTED) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_Swc_Dem_Periodic)
/* Inline read optimization; Rte_Call_RPort_Event_Event_LostComm_SEN_PrestoreFreezeFrame to direct read */
#define Rte_Call_RPort_Event_Event_LostComm_SEN_PrestoreFreezeFrame()  ( ((VAR(Std_ReturnType, AUTOMATIC))RTE_E_UNCONNECTED) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_Swc_Dem_Periodic)
/* Inline read optimization; Rte_Call_RPort_Event_Event_LostComm_SEN_ResetEventStatus to direct read */
#define Rte_Call_RPort_Event_Event_LostComm_SEN_ResetEventStatus()  ( ((VAR(Std_ReturnType, AUTOMATIC))RTE_E_UNCONNECTED) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_Swc_Dem_Periodic)
/* Inline read optimization; Rte_Call_RPort_Event_Event_LostComm_SEN_SetEventStatus to direct read */
#define Rte_Call_RPort_Event_Event_LostComm_SEN_SetEventStatus( EventStatus )  ( ((VAR(Std_ReturnType, AUTOMATIC))RTE_E_UNCONNECTED) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_Swc_Dem_Periodic)
/* Inline read optimization; Rte_Call_RPort_EvtInfo_Event_LostComm_MPDU_GetDTCOfEvent to direct read */
#define Rte_Call_RPort_EvtInfo_Event_LostComm_MPDU_GetDTCOfEvent( DTCFormat, DTCOfEvent )  ( ((VAR(Std_ReturnType, AUTOMATIC))RTE_E_UNCONNECTED) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_Swc_Dem_Periodic)
/* Inline read optimization; Rte_Call_RPort_EvtInfo_Event_LostComm_MPDU_GetEventFailed to direct read */
#define Rte_Call_RPort_EvtInfo_Event_LostComm_MPDU_GetEventFailed( EventFailed )  ( ((VAR(Std_ReturnType, AUTOMATIC))RTE_E_UNCONNECTED) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_Swc_Dem_Periodic)
/* Inline read optimization; Rte_Call_RPort_EvtInfo_Event_LostComm_MPDU_GetEventStatus to direct read */
#define Rte_Call_RPort_EvtInfo_Event_LostComm_MPDU_GetEventStatus( EventStatusByte )  ( ((VAR(Std_ReturnType, AUTOMATIC))RTE_E_UNCONNECTED) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_Swc_Dem_Periodic)
/* Inline read optimization; Rte_Call_RPort_EvtInfo_Event_LostComm_MPDU_GetEventTested to direct read */
#define Rte_Call_RPort_EvtInfo_Event_LostComm_MPDU_GetEventTested( EventTested )  ( ((VAR(Std_ReturnType, AUTOMATIC))RTE_E_UNCONNECTED) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_Swc_Dem_Periodic)
/* Inline read optimization; Rte_Call_RPort_EvtInfo_Event_LostComm_MPDU_GetFaultDetectionCounter to direct read */
#define Rte_Call_RPort_EvtInfo_Event_LostComm_MPDU_GetFaultDetectionCounter( FaultDetectionCounter )  ( ((VAR(Std_ReturnType, AUTOMATIC))RTE_E_UNCONNECTED) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_Swc_Dem_Periodic)
/* Inline read optimization; Rte_Call_RPort_EvtInfo_Event_LostComm_SEN_1_GetDTCOfEvent to direct read */
#define Rte_Call_RPort_EvtInfo_Event_LostComm_SEN_1_GetDTCOfEvent( DTCFormat, DTCOfEvent )  ( ((VAR(Std_ReturnType, AUTOMATIC))RTE_E_UNCONNECTED) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_Swc_Dem_Periodic)
/* Inline read optimization; Rte_Call_RPort_EvtInfo_Event_LostComm_SEN_1_GetEventFailed to direct read */
#define Rte_Call_RPort_EvtInfo_Event_LostComm_SEN_1_GetEventFailed( EventFailed )  ( ((VAR(Std_ReturnType, AUTOMATIC))RTE_E_UNCONNECTED) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_Swc_Dem_Periodic)
/* Inline read optimization; Rte_Call_RPort_EvtInfo_Event_LostComm_SEN_1_GetEventStatus to direct read */
#define Rte_Call_RPort_EvtInfo_Event_LostComm_SEN_1_GetEventStatus( EventStatusByte )  ( ((VAR(Std_ReturnType, AUTOMATIC))RTE_E_UNCONNECTED) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_Swc_Dem_Periodic)
/* Inline read optimization; Rte_Call_RPort_EvtInfo_Event_LostComm_SEN_1_GetEventTested to direct read */
#define Rte_Call_RPort_EvtInfo_Event_LostComm_SEN_1_GetEventTested( EventTested )  ( ((VAR(Std_ReturnType, AUTOMATIC))RTE_E_UNCONNECTED) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_Swc_Dem_Periodic)
/* Inline read optimization; Rte_Call_RPort_EvtInfo_Event_LostComm_SEN_1_GetFaultDetectionCounter to direct read */
#define Rte_Call_RPort_EvtInfo_Event_LostComm_SEN_1_GetFaultDetectionCounter( FaultDetectionCounter )  ( ((VAR(Std_ReturnType, AUTOMATIC))RTE_E_UNCONNECTED) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_Swc_Dem_Periodic)
/* Inline read optimization; Rte_Call_RPort_EvtInfo_Event_LostComm_SEN_GetDTCOfEvent to direct read */
#define Rte_Call_RPort_EvtInfo_Event_LostComm_SEN_GetDTCOfEvent( DTCFormat, DTCOfEvent )  ( ((VAR(Std_ReturnType, AUTOMATIC))RTE_E_UNCONNECTED) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_Swc_Dem_Periodic)
/* Inline read optimization; Rte_Call_RPort_EvtInfo_Event_LostComm_SEN_GetEventFailed to direct read */
#define Rte_Call_RPort_EvtInfo_Event_LostComm_SEN_GetEventFailed( EventFailed )  ( ((VAR(Std_ReturnType, AUTOMATIC))RTE_E_UNCONNECTED) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_Swc_Dem_Periodic)
/* Inline read optimization; Rte_Call_RPort_EvtInfo_Event_LostComm_SEN_GetEventStatus to direct read */
#define Rte_Call_RPort_EvtInfo_Event_LostComm_SEN_GetEventStatus( EventStatusByte )  ( ((VAR(Std_ReturnType, AUTOMATIC))RTE_E_UNCONNECTED) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_Swc_Dem_Periodic)
/* Inline read optimization; Rte_Call_RPort_EvtInfo_Event_LostComm_SEN_GetEventTested to direct read */
#define Rte_Call_RPort_EvtInfo_Event_LostComm_SEN_GetEventTested( EventTested )  ( ((VAR(Std_ReturnType, AUTOMATIC))RTE_E_UNCONNECTED) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_Swc_Dem_Periodic)
/* Inline read optimization; Rte_Call_RPort_EvtInfo_Event_LostComm_SEN_GetFaultDetectionCounter to direct read */
#define Rte_Call_RPort_EvtInfo_Event_LostComm_SEN_GetFaultDetectionCounter( FaultDetectionCounter )  ( ((VAR(Std_ReturnType, AUTOMATIC))RTE_E_UNCONNECTED) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_FiM_Swc)
/* Inline read optimization; Rte_Call_RPort_FiMFID_0_GetFunctionPermission to direct read */
#define Rte_Call_RPort_FiMFID_0_GetFunctionPermission( Permission )  ( ((VAR(Std_ReturnType, AUTOMATIC))RTE_E_UNCONNECTED) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_Swc_Dem_Periodic)
/* Inline read optimization; Rte_Call_RPort_OpCycle_DemOperationCycle_0_SetOperationCycleState to direct read */
#define Rte_Call_RPort_OpCycle_DemOperationCycle_0_SetOperationCycleState( CycleState )  ( ((VAR(Std_ReturnType, AUTOMATIC))RTE_E_UNCONNECTED) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_Runnable_Dcm_Swc)
/* Inline read optimization; Rte_IRead_Runnable_Dcm_Swc_RPort_TST_Diag_TestNumber_uint8 to implicit access macro */
#define Rte_IRead_Runnable_Dcm_Swc_RPort_TST_Diag_TestNumber_uint8()  ( (CONST(uint8, RTE_DATA)) Rte_ImplicitBufs.isa_18.Rte_SWC_1000ms_Task_Core0.rbuf0.value )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_Runnable_Dcm_Swc)
/* Inline read optimization; Rte_Mode_RPort_DcmDiagnosticSessionControl_MDGP_DcmDiagnosticSessionControl to direct read */
#define Rte_Mode_RPort_DcmDiagnosticSessionControl_MDGP_DcmDiagnosticSessionControl()  ( Rte_ModeCurrent_4 )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_Runnable_Dcm_Swc)
/* Inline read optimization; Rte_Mode_RPort_DcmEcuReset_MDGP_DcmEcuReset to direct read */
#define Rte_Mode_RPort_DcmEcuReset_MDGP_DcmEcuReset()  ( Rte_ModeCurrent_5 )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_Runnable_Dcm_Swc)
#define Rte_Read_RPort_DataServices_DspData_SYS_SUP_ID_F18A_Data( data ) (Rte_Read_Diag_SWC_RPort_DataServices_DspData_SYS_SUP_ID_F18A_Data(data))
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_Runnable_Dcm_Swc)
#define Rte_Switch_PPort_Mdg2_MDGP_Mdg2( data ) (Rte_Switch_Diag_SWC_PPort_Mdg2_MDGP_Mdg2(data))
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_Runnable_Dcm_Swc)
#define Rte_Write_PPort_DataServices_DspData_ASW_VER_F189_Data( data ) (Rte_Write_Diag_SWC_PPort_DataServices_DspData_ASW_VER_F189_Data(data))
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_Runnable_Dcm_Swc)
#define Rte_Write_PPort_DataServices_DspData_MANU_DATE_F18B_Data( data ) (Rte_Write_Diag_SWC_PPort_DataServices_DspData_MANU_DATE_F18B_Data(data))
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_Runnable_Dcm_Swc)
#define Rte_Write_PPort_DataServices_DspData_SYS_SUP_ID_F18A_Data( data ) (Rte_Write_Diag_SWC_PPort_DataServices_DspData_SYS_SUP_ID_F18A_Data(data))
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_SwcDcmEcuHardReset)
/* Inline write optimization; Rte_Write_PPort_Diag_Request_Shutdown_uint16 to null body */
#define Rte_Write_PPort_Diag_Request_Shutdown_uint16( data )  ( ((VAR(Std_ReturnType, AUTOMATIC))RTE_E_OK) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_Runnable_Dcm_Swc)
/* Inline write optimization; Rte_Write_PPort_TST_FimPermisison_TST_FimPermission to null body */
#define Rte_Write_PPort_TST_FimPermisison_TST_FimPermission( data )  ( ((VAR(Std_ReturnType, AUTOMATIC))RTE_E_OK) )
#endif

#endif /* RTE_CORE */

/*******************************************************
 ***
 *** RE Prototypes
 ***
 *******************************************************/

#define Diag_SWC_START_SEC_CODE
#include "Diag_SWC_MemMap.h" /*lint !e537 permit multiple inclusion */
FUNC(void, Diag_SWC_CODE) RE_Swc_Dem_Periodic(void);
FUNC(void, Diag_SWC_CODE) RunnableEntity_dcm(void);
FUNC(Std_ReturnType, Diag_SWC_CODE) Swc_DSP_SEC_LEV_L1_CK_func(P2CONST(uint8, AUTOMATIC, RTE_APPL_DATA) Key,
                                                               VAR(Dcm_OpStatusType, AUTOMATIC) OpStatus,
                                                               CONSTP2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
FUNC(Std_ReturnType, Diag_SWC_CODE) Swc_DSP_SEC_LEV_L1_GS_func(VAR(Dcm_OpStatusType, AUTOMATIC) OpStatus,
                                                               CONSTP2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Seed,
                                                               CONSTP2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
FUNC(Std_ReturnType, Diag_SWC_CODE) Swc_DSP_SEC_LEV_L2_CK_func(P2CONST(uint8, AUTOMATIC, RTE_APPL_DATA) Key,
                                                               VAR(Dcm_OpStatusType, AUTOMATIC) OpStatus,
                                                               CONSTP2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
FUNC(Std_ReturnType, Diag_SWC_CODE) Swc_DSP_SEC_LEV_L2_GS_func(VAR(Dcm_OpStatusType, AUTOMATIC) OpStatus,
                                                               CONSTP2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Seed,
                                                               CONSTP2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
FUNC(Std_ReturnType, Diag_SWC_CODE) Swc_DSP_SEC_LEV_L3_CK_func(P2CONST(uint8, AUTOMATIC, RTE_APPL_DATA) Key,
                                                               VAR(Dcm_OpStatusType, AUTOMATIC) OpStatus,
                                                               CONSTP2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
FUNC(Std_ReturnType, Diag_SWC_CODE) Swc_DSP_SEC_LEV_L3_GS_func(VAR(Dcm_OpStatusType, AUTOMATIC) OpStatus,
                                                               CONSTP2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Seed,
                                                               CONSTP2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
FUNC(Std_ReturnType, Diag_SWC_CODE) Swc_DSP_SEC_LEV_L4_CK_func(P2CONST(uint8, AUTOMATIC, RTE_APPL_DATA) Key,
                                                               VAR(Dcm_OpStatusType, AUTOMATIC) OpStatus,
                                                               CONSTP2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
FUNC(Std_ReturnType, Diag_SWC_CODE) Swc_DSP_SEC_LEV_L4_GS_func(VAR(Dcm_OpStatusType, AUTOMATIC) OpStatus,
                                                               CONSTP2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Seed,
                                                               CONSTP2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
FUNC(Std_ReturnType, Diag_SWC_CODE) Swc_RoutineServices_DcmDspRoutine_CheckProgCond_Result_func(VAR(Dcm_OpStatusType, AUTOMATIC) OpStatus,
                                                                                                CONSTP2VAR(Dcm_RequestDataOut_DcmDspRoutine_CheckPgmPreCond_DcmDspRequestRoutineResultsOutSignal_0Type, AUTOMATIC, RTE_APPL_DATA) DataOut_DcmDspRequestRoutineResultsOutSignal_0,
                                                                                                CONSTP2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
FUNC(Std_ReturnType, Diag_SWC_CODE) Swc_RoutineServices_DcmDspRoutine_CheckProgCond_Start_func(VAR(Dcm_OpStatusType, AUTOMATIC) OpStatus,
                                                                                               CONSTP2VAR(Dcm_StartDataOut_DcmDspRoutine_CheckPgmPreCond_DcmDspStartRoutineOutSignal_ESType, AUTOMATIC, RTE_APPL_DATA) DataOut_DcmDspStartRoutineOutSignal_ES,
                                                                                               CONSTP2VAR(Dcm_StartDataOut_DcmDspRoutine_CheckPgmPreCond_DcmDspStartRoutineOutSignal_VSType, AUTOMATIC, RTE_APPL_DATA) DataOut_DcmDspStartRoutineOutSignal_VS,
                                                                                               CONSTP2VAR(Dcm_StartDataOut_DcmDspRoutine_CheckPgmPreCond_DcmDspStartRoutineOutSignal_ICType, AUTOMATIC, RTE_APPL_DATA) DataOut_DcmDspStartRoutineOutSignal_IC,
                                                                                               CONSTP2VAR(Dcm_StartDataOut_DcmDspRoutine_CheckPgmPreCond_DcmDspStartRoutineOutSignal_VCType, AUTOMATIC, RTE_APPL_DATA) DataOut_DcmDspStartRoutineOutSignal_VC,
                                                                                               CONSTP2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
FUNC(Std_ReturnType, Diag_SWC_CODE) Swc_RoutineServices_DcmDspRoutine_CheckProgCond_Stop_func(VAR(Dcm_StopDataIn_DcmDspRoutine_CheckPgmPreCond_DcmDspStopRoutineInSignal_0Type, AUTOMATIC) DataIn_DcmDspStopRoutineInSignal_0,
                                                                                              VAR(Dcm_OpStatusType, AUTOMATIC) OpStatus,
                                                                                              CONSTP2VAR(Dcm_StopDataOut_DcmDspRoutine_CheckPgmPreCond_DcmDspStopRoutineOutSignal_0Type, AUTOMATIC, RTE_APPL_DATA) DataOut_DcmDspStopRoutineOutSignal_0,
                                                                                              CONSTP2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
FUNC(Std_ReturnType, Diag_SWC_CODE) Swc_RoutineServices_DcmDspRoutine_Test_Result_func(VAR(Dcm_OpStatusType, AUTOMATIC) OpStatus,
                                                                                       CONSTP2VAR(Dcm_RequestDataOut_DcmDspRoutine_Test_DcmDspRequestRoutineResultsOutSignal_0Type, AUTOMATIC, RTE_APPL_DATA) DataOut_DcmDspRequestRoutineResultsOutSignal_0,
                                                                                       CONSTP2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
FUNC(Std_ReturnType, Diag_SWC_CODE) Swc_RoutineServices_DcmDspRoutine_Test_Start_func(VAR(Dcm_OpStatusType, AUTOMATIC) OpStatus,
                                                                                      CONSTP2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
FUNC(Std_ReturnType, Diag_SWC_CODE) Swc_RoutineServices_DcmDspRoutine_Test_Stop_func(VAR(Dcm_StopDataIn_DcmDspRoutine_Test_DcmDspStopRoutineInSignal_0Type, AUTOMATIC) DataIn_DcmDspStopRoutineInSignal_0,
                                                                                     VAR(Dcm_OpStatusType, AUTOMATIC) OpStatus,
                                                                                     CONSTP2VAR(Dcm_StopDataOut_DcmDspRoutine_Test_DcmDspStopRoutineOutSignal_0Type, AUTOMATIC, RTE_APPL_DATA) DataOut_DcmDspStopRoutineOutSignal_0,
                                                                                     CONSTP2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#define Diag_SWC_STOP_SEC_CODE
#include "Diag_SWC_MemMap.h" /*lint !e537 permit multiple inclusion */

/* Initial values for data element prototypes */

#ifdef __cplusplus
} /* extern C */
#endif /* __cplusplus */

#endif /* !RTE_DIAG_SWC_H */
