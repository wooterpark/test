/** @file     Rte_SWC_TDC.h
  *
  * @brief    Application header file
  *
  * @note     AUTOMATICALLY GENERATED FILE! DO NOT EDIT!
  *
  * @note     Generated by ETAS RTA-RTE
  * @note     Version 6.6.0 
  */

#ifndef RTE_SWC_TDC_H
#define RTE_SWC_TDC_H

#ifndef RTE_CORE
#ifdef RTE_APPLICATION_HEADER_FILE
#error Multiple application header files included.
#endif /* RTE_APPLICATION_HEADER_FILE */
#define RTE_APPLICATION_HEADER_FILE
#endif /* RTE_CORE */

/*******************************************************
 ***
 *** Includes
 ***
 *******************************************************/

#include "Rte.h"
#include "Rte_Intl.h"
#include "Rte_SWC_TDC_Type.h"

#include "Rte_DataHandleType.h"

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

#if defined(RTE_RUNNABLEAPI_RE_SWC_TDC_2ms)
   /* Do nothing for this and all elif clauses below (rte_sws_2751) */
#elif defined(RTE_RUNNABLEAPI_RE_SWC_TDC_Init)
#else
   /* None of above defined so define value including all APIs (rte_sws_2751) */
   #define RTE_PRV_ALL_API
#endif

/*******************************************************
 ***
 *** Constants
 ***
 *******************************************************/


/*******************************************************
 ***
 *** Public Types
 ***
 *******************************************************/

/* BEGIN: SWC types (core visible) */
struct Rte_CDS_SWC_TDC {
   uint8 Rte_Dummy;
};
typedef struct Rte_CDS_SWC_TDC Rte_CDS_SWC_TDC;
/* END: SWC types (core visible) */

/*******************************************************
 ***
 *** Private Types
 ***
 *******************************************************/

/* BEGIN: SWC types (private) */
/* END: SWC types (private) */

/*******************************************************
 ***
 *** Instance Declarations
 ***
 *******************************************************/

#define RTE_START_SEC_Partition_Core0_CONST_UNSPECIFIED
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern CONST(struct Rte_CDS_SWC_TDC, RTE_CONST) Rte_Inst_SWC_TDC;
#define RTE_STOP_SEC_Partition_Core0_CONST_UNSPECIFIED
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */


#ifndef RTE_CORE
typedef CONSTP2CONST(struct Rte_CDS_SWC_TDC, AUTOMATIC, RTE_CONST) Rte_Instance;
#endif /* RTE_CORE */

/*******************************************************
 ***
 *** API Mapping macros
 ***
 *******************************************************/

/* API Mapping Macros */
#ifndef RTE_CORE

#define RTE_SWC_TDC_START_SEC_CODE
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
FUNC(Std_ReturnType, RTE_CODE) Rte_Write_SWC_TDC_PP_SWC_TDC_TDC_TrqDes(VAR(float32, AUTOMATIC) data);
#define RTE_SWC_TDC_STOP_SEC_CODE
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core0_VAR_CLEARED_32
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(float32, RTE_DATA) Rte_Rx_000168_Rdc_nWoFlt;
#define RTE_STOP_SEC_Partition_Core0_VAR_CLEARED_32
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core0_VAR_CLEARED_8
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(uint8, RTE_DATA) Rte_Rx_000181_SCF_stModeReqToTdc;
#define RTE_STOP_SEC_Partition_Core0_VAR_CLEARED_8
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core0_VAR_CLEARED_BOOLEAN
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(boolean, RTE_DATA) Rte_Rx_000227_TDC_flgTrqLmtActv;
#define RTE_STOP_SEC_Partition_Core0_VAR_CLEARED_BOOLEAN
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core0_VAR_CLEARED_32
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(float32, RTE_DATA) Rte_Rx_000231_TPC_TrqMax;
#define RTE_STOP_SEC_Partition_Core0_VAR_CLEARED_32
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core0_VAR_CLEARED_32
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(float32, RTE_DATA) Rte_Rx_000232_TPC_TrqMin;
#define RTE_STOP_SEC_Partition_Core0_VAR_CLEARED_32
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core0_VAR_CLEARED_32
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(float32, RTE_DATA) Rte_Rx_000249_VCF_HoldStartTrq;
#define RTE_STOP_SEC_Partition_Core0_VAR_CLEARED_32
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core0_VAR_CLEARED_32
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(float32, RTE_DATA) Rte_Rx_000250_VCF_KpNCtl;
#define RTE_STOP_SEC_Partition_Core0_VAR_CLEARED_32
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core0_VAR_CLEARED_32
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(float32, RTE_DATA) Rte_Rx_000251_VCF_NsetPReq;
#define RTE_STOP_SEC_Partition_Core0_VAR_CLEARED_32
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core0_VAR_CLEARED_32
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(float32, RTE_DATA) Rte_Rx_000252_VCF_TrqDes;
#define RTE_STOP_SEC_Partition_Core0_VAR_CLEARED_32
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core0_VAR_CLEARED_8
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(uint8, RTE_DATA) Rte_Rx_000253_VCF_stModeReq;
#define RTE_STOP_SEC_Partition_Core0_VAR_CLEARED_8
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core0_VAR_CLEARED_32
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(float32, RTE_DATA) Rte_Rx_000254_VCF_trqRamp;
#define RTE_STOP_SEC_Partition_Core0_VAR_CLEARED_32
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_TDC_2ms)
/* Inline read optimization; Rte_Read_RP_SWC_Rdc_Rdc_nWoFlt to direct access */
#define Rte_Read_RP_SWC_Rdc_Rdc_nWoFlt( data )  ( ((*(data)) = Rte_Rx_000168_Rdc_nWoFlt),((VAR(Std_ReturnType, AUTOMATIC))RTE_E_OK) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_TDC_2ms)
/* Inline read optimization; Rte_Read_RP_SWC_SCF_SCF_stModeReqToTdc to direct access */
#define Rte_Read_RP_SWC_SCF_SCF_stModeReqToTdc( data )  ( ((*(data)) = Rte_Rx_000181_SCF_stModeReqToTdc),((VAR(Std_ReturnType, AUTOMATIC))RTE_E_OK) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_TDC_2ms)
/* Inline read optimization; Rte_Read_RP_SWC_TPC_TPC_TrqMax to direct access */
#define Rte_Read_RP_SWC_TPC_TPC_TrqMax( data )  ( ((*(data)) = Rte_Rx_000231_TPC_TrqMax),((VAR(Std_ReturnType, AUTOMATIC))RTE_E_OK) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_TDC_2ms)
/* Inline read optimization; Rte_Read_RP_SWC_TPC_TPC_TrqMin to direct access */
#define Rte_Read_RP_SWC_TPC_TPC_TrqMin( data )  ( ((*(data)) = Rte_Rx_000232_TPC_TrqMin),((VAR(Std_ReturnType, AUTOMATIC))RTE_E_OK) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_TDC_2ms)
/* Inline read optimization; Rte_Read_RP_SWC_VCF_VCF_HoldStartTrq to direct access */
#define Rte_Read_RP_SWC_VCF_VCF_HoldStartTrq( data )  ( ((*(data)) = Rte_Rx_000249_VCF_HoldStartTrq),((VAR(Std_ReturnType, AUTOMATIC))RTE_E_OK) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_TDC_2ms)
/* Inline read optimization; Rte_Read_RP_SWC_VCF_VCF_KpNCtl to direct access */
#define Rte_Read_RP_SWC_VCF_VCF_KpNCtl( data )  ( ((*(data)) = Rte_Rx_000250_VCF_KpNCtl),((VAR(Std_ReturnType, AUTOMATIC))RTE_E_OK) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_TDC_2ms)
/* Inline read optimization; Rte_Read_RP_SWC_VCF_VCF_NsetPReq to direct access */
#define Rte_Read_RP_SWC_VCF_VCF_NsetPReq( data )  ( ((*(data)) = Rte_Rx_000251_VCF_NsetPReq),((VAR(Std_ReturnType, AUTOMATIC))RTE_E_OK) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_TDC_2ms)
/* Inline read optimization; Rte_Read_RP_SWC_VCF_VCF_TrqDes to direct access */
#define Rte_Read_RP_SWC_VCF_VCF_TrqDes( data )  ( ((*(data)) = Rte_Rx_000252_VCF_TrqDes),((VAR(Std_ReturnType, AUTOMATIC))RTE_E_OK) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_TDC_2ms)
/* Inline read optimization; Rte_Read_RP_SWC_VCF_VCF_stModeReq to direct access */
#define Rte_Read_RP_SWC_VCF_VCF_stModeReq( data )  ( ((*(data)) = Rte_Rx_000253_VCF_stModeReq),((VAR(Std_ReturnType, AUTOMATIC))RTE_E_OK) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_TDC_2ms)
/* Inline read optimization; Rte_Read_RP_SWC_VCF_VCF_trqRamp to direct access */
#define Rte_Read_RP_SWC_VCF_VCF_trqRamp( data )  ( ((*(data)) = Rte_Rx_000254_VCF_trqRamp),((VAR(Std_ReturnType, AUTOMATIC))RTE_E_OK) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_TDC_2ms)
#define Rte_Write_PP_SWC_TDC_TDC_TrqDes( data ) (Rte_Write_SWC_TDC_PP_SWC_TDC_TDC_TrqDes(data))
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_TDC_2ms)
/* Inline Write optimization; Rte_Write_PP_SWC_TDC_TDC_flgTrqLmtActv to direct write */
#define Rte_Write_PP_SWC_TDC_TDC_flgTrqLmtActv( data ) ( (Rte_Rx_000227_TDC_flgTrqLmtActv = data), RTE_E_OK )
#endif

#endif /* RTE_CORE */

/*******************************************************
 ***
 *** RE Prototypes
 ***
 *******************************************************/

#define SWC_TDC_START_SEC_CODE
#include "SWC_TDC_MemMap.h" /*lint !e537 permit multiple inclusion */
FUNC(void, SWC_TDC_CODE) SWC_TDC_10ms(void);
FUNC(void, SWC_TDC_CODE) SWC_TDC_Init(void);
#define SWC_TDC_STOP_SEC_CODE
#include "SWC_TDC_MemMap.h" /*lint !e537 permit multiple inclusion */

/* Initial values for data element prototypes */

#ifdef __cplusplus
} /* extern C */
#endif /* __cplusplus */

#endif /* !RTE_SWC_TDC_H */
