/** @file     Rte_SWC_BCC.h
  *
  * @brief    Application header file
  *
  * @note     AUTOMATICALLY GENERATED FILE! DO NOT EDIT!
  *
  * @note     Generated by ETAS RTA-RTE
  * @note     Version 6.6.0 
  */

#ifndef RTE_SWC_BCC_H
#define RTE_SWC_BCC_H

#ifndef RTE_CORE
#ifdef RTE_APPLICATION_HEADER_FILE
#error Multiple application header files included.
#endif /* RTE_APPLICATION_HEADER_FILE */
#define RTE_APPLICATION_HEADER_FILE
#endif /* RTE_CORE */

/*******************************************************
 ***
 *** Includes
 ***
 *******************************************************/

#include "Rte.h"
#include "Rte_Intl.h"
#include "Rte_SWC_BCC_Type.h"

#include "Rte_DataHandleType.h"

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

#if defined(RTE_RUNNABLEAPI_RE_SWC_BCC_100us)
   /* Do nothing for this and all elif clauses below (rte_sws_2751) */
#elif defined(RTE_RUNNABLEAPI_RE_SWC_BCC_Init)
#else
   /* None of above defined so define value including all APIs (rte_sws_2751) */
   #define RTE_PRV_ALL_API
#endif

/*******************************************************
 ***
 *** Constants
 ***
 *******************************************************/


/*******************************************************
 ***
 *** Public Types
 ***
 *******************************************************/

/* BEGIN: SWC types (core visible) */
struct Rte_CDS_SWC_BCC {
   uint8 Rte_Dummy;
};
typedef struct Rte_CDS_SWC_BCC Rte_CDS_SWC_BCC;
/* END: SWC types (core visible) */

/*******************************************************
 ***
 *** Private Types
 ***
 *******************************************************/

/* BEGIN: SWC types (private) */
/* END: SWC types (private) */

/*******************************************************
 ***
 *** Instance Declarations
 ***
 *******************************************************/

#define RTE_START_SEC_Partition_Core2_CONST_UNSPECIFIED
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern CONST(struct Rte_CDS_SWC_BCC, RTE_CONST) Rte_Inst_SWC_BCC;
#define RTE_STOP_SEC_Partition_Core2_CONST_UNSPECIFIED
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */


#ifndef RTE_CORE
typedef CONSTP2CONST(struct Rte_CDS_SWC_BCC, AUTOMATIC, RTE_CONST) Rte_Instance;
#endif /* RTE_CORE */

/*******************************************************
 ***
 *** API Mapping macros
 ***
 *******************************************************/

/* API Mapping Macros */
#ifndef RTE_CORE

#define RTE_SWC_BCC_START_SEC_CODE
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
FUNC(Std_ReturnType, RTE_CODE) Rte_Read_SWC_BCC_RP_SWC_HSPF_HSPF_tCoolantTempFlt(CONSTP2VAR(float32, AUTOMATIC, RTE_APPL_DATA) data);
FUNC(Std_ReturnType, RTE_CODE) Rte_Read_SWC_BCC_RP_SWC_HSPF_HSPF_tDBCTempUFlt(CONSTP2VAR(float32, AUTOMATIC, RTE_APPL_DATA) data);
FUNC(Std_ReturnType, RTE_CODE) Rte_Read_SWC_BCC_RP_SWC_HSPF_HSPF_tDBCTempVFlt(CONSTP2VAR(float32, AUTOMATIC, RTE_APPL_DATA) data);
FUNC(Std_ReturnType, RTE_CODE) Rte_Read_SWC_BCC_RP_SWC_HSPF_HSPF_tDBCTempWFlt(CONSTP2VAR(float32, AUTOMATIC, RTE_APPL_DATA) data);
FUNC(Std_ReturnType, RTE_CODE) Rte_Read_SWC_BCC_RP_SWC_HSPF_HSPF_uDcLnkSlowFlt(CONSTP2VAR(float32, AUTOMATIC, RTE_APPL_DATA) data);
FUNC(Std_ReturnType, RTE_CODE) Rte_Read_SWC_BCC_RP_SWC_MPC_MPC_dtCorFac(CONSTP2VAR(float32, AUTOMATIC, RTE_APPL_DATA) data);
FUNC(Std_ReturnType, RTE_CODE) Rte_Read_SWC_BCC_RP_SWC_Rdc_Rdc_nWoFlt(CONSTP2VAR(float32, AUTOMATIC, RTE_APPL_DATA) data);
FUNC(Std_ReturnType, RTE_CODE) Rte_Read_SWC_BCC_RP_SWC_SCF_SCF_stGateDrv(CONSTP2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) data);
FUNC(Std_ReturnType, RTE_CODE) Rte_Read_SWC_BCC_RP_SWC_TPC_TPC_stMotorMod(CONSTP2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) data);
FUNC(Std_ReturnType, RTE_CODE) Rte_Write_SWC_BCC_PP_SWC_BCC_BCC_iDcLnkEstFlt(VAR(float32, AUTOMATIC) data);
FUNC(Std_ReturnType, RTE_CODE) Rte_Write_SWC_BCC_PP_SWC_BCC_BCC_tCoolantTj(VAR(float32, AUTOMATIC) data);
FUNC(Std_ReturnType, RTE_CODE) Rte_Write_SWC_BCC_PP_SWC_BCC_BCC_tIgbtTj(VAR(float32, AUTOMATIC) data);
#define RTE_SWC_BCC_STOP_SEC_CODE
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core2_VAR_CLEARED_32
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(float32, RTE_DATA) Rte_Rx_000082_MCF_DycU;
#define RTE_STOP_SEC_Partition_Core2_VAR_CLEARED_32
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core2_VAR_CLEARED_32
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(float32, RTE_DATA) Rte_Rx_000083_MCF_DycV;
#define RTE_STOP_SEC_Partition_Core2_VAR_CLEARED_32
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core2_VAR_CLEARED_32
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(float32, RTE_DATA) Rte_Rx_000084_MCF_DycW;
#define RTE_STOP_SEC_Partition_Core2_VAR_CLEARED_32
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core2_VAR_CLEARED_32
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(float32, RTE_DATA) Rte_Rx_000086_MCF_Is;
#define RTE_STOP_SEC_Partition_Core2_VAR_CLEARED_32
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core2_VAR_CLEARED_32
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(float32, RTE_DATA) Rte_Rx_000090_MCF_frqPwm;
#define RTE_STOP_SEC_Partition_Core2_VAR_CLEARED_32
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core2_VAR_CLEARED_32
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(float32, RTE_DATA) Rte_Rx_000092_MCF_iU;
#define RTE_STOP_SEC_Partition_Core2_VAR_CLEARED_32
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core2_VAR_CLEARED_32
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(float32, RTE_DATA) Rte_Rx_000094_MCF_iV;
#define RTE_STOP_SEC_Partition_Core2_VAR_CLEARED_32
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core2_VAR_CLEARED_32
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(float32, RTE_DATA) Rte_Rx_000096_MCF_iW;
#define RTE_STOP_SEC_Partition_Core2_VAR_CLEARED_32
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core2_VAR_CLEARED_8
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(uint8, RTE_DATA) Rte_Rx_000101_MCF_secVolt;
#define RTE_STOP_SEC_Partition_Core2_VAR_CLEARED_8
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_Partition_Core2_VAR_CLEARED_32
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(float32, RTE_DATA) Rte_Rx_000103_MCF_tiLock;
#define RTE_STOP_SEC_Partition_Core2_VAR_CLEARED_32
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_BCC_100us)
#define Rte_Read_RP_SWC_HSPF_HSPF_tCoolantTempFlt( data ) (Rte_Read_SWC_BCC_RP_SWC_HSPF_HSPF_tCoolantTempFlt(data))
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_BCC_100us)
#define Rte_Read_RP_SWC_HSPF_HSPF_tDBCTempUFlt( data ) (Rte_Read_SWC_BCC_RP_SWC_HSPF_HSPF_tDBCTempUFlt(data))
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_BCC_100us)
#define Rte_Read_RP_SWC_HSPF_HSPF_tDBCTempVFlt( data ) (Rte_Read_SWC_BCC_RP_SWC_HSPF_HSPF_tDBCTempVFlt(data))
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_BCC_100us)
#define Rte_Read_RP_SWC_HSPF_HSPF_tDBCTempWFlt( data ) (Rte_Read_SWC_BCC_RP_SWC_HSPF_HSPF_tDBCTempWFlt(data))
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_BCC_100us)
#define Rte_Read_RP_SWC_HSPF_HSPF_uDcLnkSlowFlt( data ) (Rte_Read_SWC_BCC_RP_SWC_HSPF_HSPF_uDcLnkSlowFlt(data))
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_BCC_100us)
/* Inline read optimization; Rte_Read_RP_SWC_MCF_MCF_DycU to direct access */
#define Rte_Read_RP_SWC_MCF_MCF_DycU( data )  ( ((*(data)) = Rte_Rx_000082_MCF_DycU),((VAR(Std_ReturnType, AUTOMATIC))RTE_E_OK) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_BCC_100us)
/* Inline read optimization; Rte_Read_RP_SWC_MCF_MCF_DycV to direct access */
#define Rte_Read_RP_SWC_MCF_MCF_DycV( data )  ( ((*(data)) = Rte_Rx_000083_MCF_DycV),((VAR(Std_ReturnType, AUTOMATIC))RTE_E_OK) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_BCC_100us)
/* Inline read optimization; Rte_Read_RP_SWC_MCF_MCF_DycW to direct access */
#define Rte_Read_RP_SWC_MCF_MCF_DycW( data )  ( ((*(data)) = Rte_Rx_000084_MCF_DycW),((VAR(Std_ReturnType, AUTOMATIC))RTE_E_OK) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_BCC_100us)
/* Inline read optimization; Rte_Read_RP_SWC_MCF_MCF_Is to direct access */
#define Rte_Read_RP_SWC_MCF_MCF_Is( data )  ( ((*(data)) = Rte_Rx_000086_MCF_Is),((VAR(Std_ReturnType, AUTOMATIC))RTE_E_OK) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_BCC_100us)
/* Inline read optimization; Rte_Read_RP_SWC_MCF_MCF_frqPwm to direct access */
#define Rte_Read_RP_SWC_MCF_MCF_frqPwm( data )  ( ((*(data)) = Rte_Rx_000090_MCF_frqPwm),((VAR(Std_ReturnType, AUTOMATIC))RTE_E_OK) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_BCC_100us)
/* Inline read optimization; Rte_Read_RP_SWC_MCF_MCF_iU to direct access */
#define Rte_Read_RP_SWC_MCF_MCF_iU( data )  ( ((*(data)) = Rte_Rx_000092_MCF_iU),((VAR(Std_ReturnType, AUTOMATIC))RTE_E_OK) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_BCC_100us)
/* Inline read optimization; Rte_Read_RP_SWC_MCF_MCF_iV to direct access */
#define Rte_Read_RP_SWC_MCF_MCF_iV( data )  ( ((*(data)) = Rte_Rx_000094_MCF_iV),((VAR(Std_ReturnType, AUTOMATIC))RTE_E_OK) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_BCC_100us)
/* Inline read optimization; Rte_Read_RP_SWC_MCF_MCF_iW to direct access */
#define Rte_Read_RP_SWC_MCF_MCF_iW( data )  ( ((*(data)) = Rte_Rx_000096_MCF_iW),((VAR(Std_ReturnType, AUTOMATIC))RTE_E_OK) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_BCC_100us)
/* Inline read optimization; Rte_Read_RP_SWC_MCF_MCF_secVolt to direct access */
#define Rte_Read_RP_SWC_MCF_MCF_secVolt( data )  ( ((*(data)) = Rte_Rx_000101_MCF_secVolt),((VAR(Std_ReturnType, AUTOMATIC))RTE_E_OK) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_BCC_100us)
/* Inline read optimization; Rte_Read_RP_SWC_MCF_MCF_tiLock to direct access */
#define Rte_Read_RP_SWC_MCF_MCF_tiLock( data )  ( ((*(data)) = Rte_Rx_000103_MCF_tiLock),((VAR(Std_ReturnType, AUTOMATIC))RTE_E_OK) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_BCC_100us)
#define Rte_Read_RP_SWC_MPC_MPC_dtCorFac( data ) (Rte_Read_SWC_BCC_RP_SWC_MPC_MPC_dtCorFac(data))
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_BCC_100us)
#define Rte_Read_RP_SWC_Rdc_Rdc_nWoFlt( data ) (Rte_Read_SWC_BCC_RP_SWC_Rdc_Rdc_nWoFlt(data))
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_BCC_100us)
#define Rte_Read_RP_SWC_SCF_SCF_stGateDrv( data ) (Rte_Read_SWC_BCC_RP_SWC_SCF_SCF_stGateDrv(data))
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_BCC_100us)
#define Rte_Read_RP_SWC_TPC_TPC_stMotorMod( data ) (Rte_Read_SWC_BCC_RP_SWC_TPC_TPC_stMotorMod(data))
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_BCC_100us)
#define Rte_Write_PP_SWC_BCC_BCC_iDcLnkEstFlt( data ) (Rte_Write_SWC_BCC_PP_SWC_BCC_BCC_iDcLnkEstFlt(data))
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_BCC_100us)
#define Rte_Write_PP_SWC_BCC_BCC_tCoolantTj( data ) (Rte_Write_SWC_BCC_PP_SWC_BCC_BCC_tCoolantTj(data))
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SWC_BCC_100us)
#define Rte_Write_PP_SWC_BCC_BCC_tIgbtTj( data ) (Rte_Write_SWC_BCC_PP_SWC_BCC_BCC_tIgbtTj(data))
#endif

#endif /* RTE_CORE */

/*******************************************************
 ***
 *** RE Prototypes
 ***
 *******************************************************/

#define SWC_BCC_START_SEC_CODE
#include "SWC_BCC_MemMap.h" /*lint !e537 permit multiple inclusion */
FUNC(void, SWC_BCC_CODE) SWC_BCC_100us(void);
FUNC(void, SWC_BCC_CODE) SWC_BCC_Init(void);
#define SWC_BCC_STOP_SEC_CODE
#include "SWC_BCC_MemMap.h" /*lint !e537 permit multiple inclusion */

/* Initial values for data element prototypes */

#ifdef __cplusplus
} /* extern C */
#endif /* __cplusplus */

#endif /* !RTE_SWC_BCC_H */
